

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 12 15:45:25 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40     0000                     
    41                           ; Generated 22/03/2023 GMT
    42                           ; 
    43                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75     0000                     	;# 
    76     0001                     	;# 
    77     0002                     	;# 
    78     0003                     	;# 
    79     0004                     	;# 
    80     0005                     	;# 
    81     0006                     	;# 
    82     0007                     	;# 
    83     0008                     	;# 
    84     0009                     	;# 
    85     000A                     	;# 
    86     000B                     	;# 
    87     000C                     	;# 
    88     000D                     	;# 
    89     000E                     	;# 
    90     000E                     	;# 
    91     000F                     	;# 
    92     0010                     	;# 
    93     0011                     	;# 
    94     0012                     	;# 
    95     0013                     	;# 
    96     0014                     	;# 
    97     0015                     	;# 
    98     0015                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     0019                     	;# 
   103     001A                     	;# 
   104     001B                     	;# 
   105     001B                     	;# 
   106     001C                     	;# 
   107     001D                     	;# 
   108     001E                     	;# 
   109     001F                     	;# 
   110     0081                     	;# 
   111     0085                     	;# 
   112     0086                     	;# 
   113     0087                     	;# 
   114     0088                     	;# 
   115     0089                     	;# 
   116     008C                     	;# 
   117     008D                     	;# 
   118     008E                     	;# 
   119     008F                     	;# 
   120     0090                     	;# 
   121     0091                     	;# 
   122     0092                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0093                     	;# 
   126     0094                     	;# 
   127     0095                     	;# 
   128     0096                     	;# 
   129     0097                     	;# 
   130     0098                     	;# 
   131     0099                     	;# 
   132     009A                     	;# 
   133     009B                     	;# 
   134     009C                     	;# 
   135     009D                     	;# 
   136     009E                     	;# 
   137     009F                     	;# 
   138     0105                     	;# 
   139     0107                     	;# 
   140     0108                     	;# 
   141     0109                     	;# 
   142     010C                     	;# 
   143     010C                     	;# 
   144     010D                     	;# 
   145     010E                     	;# 
   146     010F                     	;# 
   147     0185                     	;# 
   148     0187                     	;# 
   149     0188                     	;# 
   150     0189                     	;# 
   151     018C                     	;# 
   152     018D                     	;# 
   153     0000                     	;# 
   154     0001                     	;# 
   155     0002                     	;# 
   156     0003                     	;# 
   157     0004                     	;# 
   158     0005                     	;# 
   159     0006                     	;# 
   160     0007                     	;# 
   161     0008                     	;# 
   162     0009                     	;# 
   163     000A                     	;# 
   164     000B                     	;# 
   165     000C                     	;# 
   166     000D                     	;# 
   167     000E                     	;# 
   168     000E                     	;# 
   169     000F                     	;# 
   170     0010                     	;# 
   171     0011                     	;# 
   172     0012                     	;# 
   173     0013                     	;# 
   174     0014                     	;# 
   175     0015                     	;# 
   176     0015                     	;# 
   177     0016                     	;# 
   178     0017                     	;# 
   179     0018                     	;# 
   180     0019                     	;# 
   181     001A                     	;# 
   182     001B                     	;# 
   183     001B                     	;# 
   184     001C                     	;# 
   185     001D                     	;# 
   186     001E                     	;# 
   187     001F                     	;# 
   188     0081                     	;# 
   189     0085                     	;# 
   190     0086                     	;# 
   191     0087                     	;# 
   192     0088                     	;# 
   193     0089                     	;# 
   194     008C                     	;# 
   195     008D                     	;# 
   196     008E                     	;# 
   197     008F                     	;# 
   198     0090                     	;# 
   199     0091                     	;# 
   200     0092                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0093                     	;# 
   204     0094                     	;# 
   205     0095                     	;# 
   206     0096                     	;# 
   207     0097                     	;# 
   208     0098                     	;# 
   209     0099                     	;# 
   210     009A                     	;# 
   211     009B                     	;# 
   212     009C                     	;# 
   213     009D                     	;# 
   214     009E                     	;# 
   215     009F                     	;# 
   216     0105                     	;# 
   217     0107                     	;# 
   218     0108                     	;# 
   219     0109                     	;# 
   220     010C                     	;# 
   221     010C                     	;# 
   222     010D                     	;# 
   223     010E                     	;# 
   224     010F                     	;# 
   225     0185                     	;# 
   226     0187                     	;# 
   227     0188                     	;# 
   228     0189                     	;# 
   229     018C                     	;# 
   230     018D                     	;# 
   231     0000                     	;# 
   232     0001                     	;# 
   233     0002                     	;# 
   234     0003                     	;# 
   235     0004                     	;# 
   236     0005                     	;# 
   237     0006                     	;# 
   238     0007                     	;# 
   239     0008                     	;# 
   240     0009                     	;# 
   241     000A                     	;# 
   242     000B                     	;# 
   243     000C                     	;# 
   244     000D                     	;# 
   245     000E                     	;# 
   246     000E                     	;# 
   247     000F                     	;# 
   248     0010                     	;# 
   249     0011                     	;# 
   250     0012                     	;# 
   251     0013                     	;# 
   252     0014                     	;# 
   253     0015                     	;# 
   254     0015                     	;# 
   255     0016                     	;# 
   256     0017                     	;# 
   257     0018                     	;# 
   258     0019                     	;# 
   259     001A                     	;# 
   260     001B                     	;# 
   261     001B                     	;# 
   262     001C                     	;# 
   263     001D                     	;# 
   264     001E                     	;# 
   265     001F                     	;# 
   266     0081                     	;# 
   267     0085                     	;# 
   268     0086                     	;# 
   269     0087                     	;# 
   270     0088                     	;# 
   271     0089                     	;# 
   272     008C                     	;# 
   273     008D                     	;# 
   274     008E                     	;# 
   275     008F                     	;# 
   276     0090                     	;# 
   277     0091                     	;# 
   278     0092                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0093                     	;# 
   282     0094                     	;# 
   283     0095                     	;# 
   284     0096                     	;# 
   285     0097                     	;# 
   286     0098                     	;# 
   287     0099                     	;# 
   288     009A                     	;# 
   289     009B                     	;# 
   290     009C                     	;# 
   291     009D                     	;# 
   292     009E                     	;# 
   293     009F                     	;# 
   294     0105                     	;# 
   295     0107                     	;# 
   296     0108                     	;# 
   297     0109                     	;# 
   298     010C                     	;# 
   299     010C                     	;# 
   300     010D                     	;# 
   301     010E                     	;# 
   302     010F                     	;# 
   303     0185                     	;# 
   304     0187                     	;# 
   305     0188                     	;# 
   306     0189                     	;# 
   307     018C                     	;# 
   308     018D                     	;# 
   309     0000                     	;# 
   310     0001                     	;# 
   311     0002                     	;# 
   312     0003                     	;# 
   313     0004                     	;# 
   314     0005                     	;# 
   315     0006                     	;# 
   316     0007                     	;# 
   317     0008                     	;# 
   318     0009                     	;# 
   319     000A                     	;# 
   320     000B                     	;# 
   321     000C                     	;# 
   322     000D                     	;# 
   323     000E                     	;# 
   324     000E                     	;# 
   325     000F                     	;# 
   326     0010                     	;# 
   327     0011                     	;# 
   328     0012                     	;# 
   329     0013                     	;# 
   330     0014                     	;# 
   331     0015                     	;# 
   332     0015                     	;# 
   333     0016                     	;# 
   334     0017                     	;# 
   335     0018                     	;# 
   336     0019                     	;# 
   337     001A                     	;# 
   338     001B                     	;# 
   339     001B                     	;# 
   340     001C                     	;# 
   341     001D                     	;# 
   342     001E                     	;# 
   343     001F                     	;# 
   344     0081                     	;# 
   345     0085                     	;# 
   346     0086                     	;# 
   347     0087                     	;# 
   348     0088                     	;# 
   349     0089                     	;# 
   350     008C                     	;# 
   351     008D                     	;# 
   352     008E                     	;# 
   353     008F                     	;# 
   354     0090                     	;# 
   355     0091                     	;# 
   356     0092                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0093                     	;# 
   360     0094                     	;# 
   361     0095                     	;# 
   362     0096                     	;# 
   363     0097                     	;# 
   364     0098                     	;# 
   365     0099                     	;# 
   366     009A                     	;# 
   367     009B                     	;# 
   368     009C                     	;# 
   369     009D                     	;# 
   370     009E                     	;# 
   371     009F                     	;# 
   372     0105                     	;# 
   373     0107                     	;# 
   374     0108                     	;# 
   375     0109                     	;# 
   376     010C                     	;# 
   377     010C                     	;# 
   378     010D                     	;# 
   379     010E                     	;# 
   380     010F                     	;# 
   381     0185                     	;# 
   382     0187                     	;# 
   383     0188                     	;# 
   384     0189                     	;# 
   385     018C                     	;# 
   386     018D                     	;# 
   387     0000                     	;# 
   388     0001                     	;# 
   389     0002                     	;# 
   390     0003                     	;# 
   391     0004                     	;# 
   392     0005                     	;# 
   393     0006                     	;# 
   394     0007                     	;# 
   395     0008                     	;# 
   396     0009                     	;# 
   397     000A                     	;# 
   398     000B                     	;# 
   399     000C                     	;# 
   400     000D                     	;# 
   401     000E                     	;# 
   402     000E                     	;# 
   403     000F                     	;# 
   404     0010                     	;# 
   405     0011                     	;# 
   406     0012                     	;# 
   407     0013                     	;# 
   408     0014                     	;# 
   409     0015                     	;# 
   410     0015                     	;# 
   411     0016                     	;# 
   412     0017                     	;# 
   413     0018                     	;# 
   414     0019                     	;# 
   415     001A                     	;# 
   416     001B                     	;# 
   417     001B                     	;# 
   418     001C                     	;# 
   419     001D                     	;# 
   420     001E                     	;# 
   421     001F                     	;# 
   422     0081                     	;# 
   423     0085                     	;# 
   424     0086                     	;# 
   425     0087                     	;# 
   426     0088                     	;# 
   427     0089                     	;# 
   428     008C                     	;# 
   429     008D                     	;# 
   430     008E                     	;# 
   431     008F                     	;# 
   432     0090                     	;# 
   433     0091                     	;# 
   434     0092                     	;# 
   435     0093                     	;# 
   436     0093                     	;# 
   437     0093                     	;# 
   438     0094                     	;# 
   439     0095                     	;# 
   440     0096                     	;# 
   441     0097                     	;# 
   442     0098                     	;# 
   443     0099                     	;# 
   444     009A                     	;# 
   445     009B                     	;# 
   446     009C                     	;# 
   447     009D                     	;# 
   448     009E                     	;# 
   449     009F                     	;# 
   450     0105                     	;# 
   451     0107                     	;# 
   452     0108                     	;# 
   453     0109                     	;# 
   454     010C                     	;# 
   455     010C                     	;# 
   456     010D                     	;# 
   457     010E                     	;# 
   458     010F                     	;# 
   459     0185                     	;# 
   460     0187                     	;# 
   461     0188                     	;# 
   462     0189                     	;# 
   463     018C                     	;# 
   464     018D                     	;# 
   465     0000                     	;# 
   466     0001                     	;# 
   467     0002                     	;# 
   468     0003                     	;# 
   469     0004                     	;# 
   470     0005                     	;# 
   471     0006                     	;# 
   472     0007                     	;# 
   473     0008                     	;# 
   474     0009                     	;# 
   475     000A                     	;# 
   476     000B                     	;# 
   477     000C                     	;# 
   478     000D                     	;# 
   479     000E                     	;# 
   480     000E                     	;# 
   481     000F                     	;# 
   482     0010                     	;# 
   483     0011                     	;# 
   484     0012                     	;# 
   485     0013                     	;# 
   486     0014                     	;# 
   487     0015                     	;# 
   488     0015                     	;# 
   489     0016                     	;# 
   490     0017                     	;# 
   491     0018                     	;# 
   492     0019                     	;# 
   493     001A                     	;# 
   494     001B                     	;# 
   495     001B                     	;# 
   496     001C                     	;# 
   497     001D                     	;# 
   498     001E                     	;# 
   499     001F                     	;# 
   500     0081                     	;# 
   501     0085                     	;# 
   502     0086                     	;# 
   503     0087                     	;# 
   504     0088                     	;# 
   505     0089                     	;# 
   506     008C                     	;# 
   507     008D                     	;# 
   508     008E                     	;# 
   509     008F                     	;# 
   510     0090                     	;# 
   511     0091                     	;# 
   512     0092                     	;# 
   513     0093                     	;# 
   514     0093                     	;# 
   515     0093                     	;# 
   516     0094                     	;# 
   517     0095                     	;# 
   518     0096                     	;# 
   519     0097                     	;# 
   520     0098                     	;# 
   521     0099                     	;# 
   522     009A                     	;# 
   523     009B                     	;# 
   524     009C                     	;# 
   525     009D                     	;# 
   526     009E                     	;# 
   527     009F                     	;# 
   528     0105                     	;# 
   529     0107                     	;# 
   530     0108                     	;# 
   531     0109                     	;# 
   532     010C                     	;# 
   533     010C                     	;# 
   534     010D                     	;# 
   535     010E                     	;# 
   536     010F                     	;# 
   537     0185                     	;# 
   538     0187                     	;# 
   539     0188                     	;# 
   540     0189                     	;# 
   541     018C                     	;# 
   542     018D                     	;# 
   543     0000                     	;# 
   544     0001                     	;# 
   545     0002                     	;# 
   546     0003                     	;# 
   547     0004                     	;# 
   548     0005                     	;# 
   549     0006                     	;# 
   550     0007                     	;# 
   551     0008                     	;# 
   552     0009                     	;# 
   553     000A                     	;# 
   554     000B                     	;# 
   555     000C                     	;# 
   556     000D                     	;# 
   557     000E                     	;# 
   558     000E                     	;# 
   559     000F                     	;# 
   560     0010                     	;# 
   561     0011                     	;# 
   562     0012                     	;# 
   563     0013                     	;# 
   564     0014                     	;# 
   565     0015                     	;# 
   566     0015                     	;# 
   567     0016                     	;# 
   568     0017                     	;# 
   569     0018                     	;# 
   570     0019                     	;# 
   571     001A                     	;# 
   572     001B                     	;# 
   573     001B                     	;# 
   574     001C                     	;# 
   575     001D                     	;# 
   576     001E                     	;# 
   577     001F                     	;# 
   578     0081                     	;# 
   579     0085                     	;# 
   580     0086                     	;# 
   581     0087                     	;# 
   582     0088                     	;# 
   583     0089                     	;# 
   584     008C                     	;# 
   585     008D                     	;# 
   586     008E                     	;# 
   587     008F                     	;# 
   588     0090                     	;# 
   589     0091                     	;# 
   590     0092                     	;# 
   591     0093                     	;# 
   592     0093                     	;# 
   593     0093                     	;# 
   594     0094                     	;# 
   595     0095                     	;# 
   596     0096                     	;# 
   597     0097                     	;# 
   598     0098                     	;# 
   599     0099                     	;# 
   600     009A                     	;# 
   601     009B                     	;# 
   602     009C                     	;# 
   603     009D                     	;# 
   604     009E                     	;# 
   605     009F                     	;# 
   606     0105                     	;# 
   607     0107                     	;# 
   608     0108                     	;# 
   609     0109                     	;# 
   610     010C                     	;# 
   611     010C                     	;# 
   612     010D                     	;# 
   613     010E                     	;# 
   614     010F                     	;# 
   615     0185                     	;# 
   616     0187                     	;# 
   617     0188                     	;# 
   618     0189                     	;# 
   619     018C                     	;# 
   620     018D                     	;# 
   621     0000                     	;# 
   622     0001                     	;# 
   623     0002                     	;# 
   624     0003                     	;# 
   625     0004                     	;# 
   626     0005                     	;# 
   627     0006                     	;# 
   628     0007                     	;# 
   629     0008                     	;# 
   630     0009                     	;# 
   631     000A                     	;# 
   632     000B                     	;# 
   633     000C                     	;# 
   634     000D                     	;# 
   635     000E                     	;# 
   636     000E                     	;# 
   637     000F                     	;# 
   638     0010                     	;# 
   639     0011                     	;# 
   640     0012                     	;# 
   641     0013                     	;# 
   642     0014                     	;# 
   643     0015                     	;# 
   644     0015                     	;# 
   645     0016                     	;# 
   646     0017                     	;# 
   647     0018                     	;# 
   648     0019                     	;# 
   649     001A                     	;# 
   650     001B                     	;# 
   651     001B                     	;# 
   652     001C                     	;# 
   653     001D                     	;# 
   654     001E                     	;# 
   655     001F                     	;# 
   656     0081                     	;# 
   657     0085                     	;# 
   658     0086                     	;# 
   659     0087                     	;# 
   660     0088                     	;# 
   661     0089                     	;# 
   662     008C                     	;# 
   663     008D                     	;# 
   664     008E                     	;# 
   665     008F                     	;# 
   666     0090                     	;# 
   667     0091                     	;# 
   668     0092                     	;# 
   669     0093                     	;# 
   670     0093                     	;# 
   671     0093                     	;# 
   672     0094                     	;# 
   673     0095                     	;# 
   674     0096                     	;# 
   675     0097                     	;# 
   676     0098                     	;# 
   677     0099                     	;# 
   678     009A                     	;# 
   679     009B                     	;# 
   680     009C                     	;# 
   681     009D                     	;# 
   682     009E                     	;# 
   683     009F                     	;# 
   684     0105                     	;# 
   685     0107                     	;# 
   686     0108                     	;# 
   687     0109                     	;# 
   688     010C                     	;# 
   689     010C                     	;# 
   690     010D                     	;# 
   691     010E                     	;# 
   692     010F                     	;# 
   693     0185                     	;# 
   694     0187                     	;# 
   695     0188                     	;# 
   696     0189                     	;# 
   697     018C                     	;# 
   698     018D                     	;# 
   699     0000                     	;# 
   700     0001                     	;# 
   701     0002                     	;# 
   702     0003                     	;# 
   703     0004                     	;# 
   704     0005                     	;# 
   705     0006                     	;# 
   706     0007                     	;# 
   707     0008                     	;# 
   708     0009                     	;# 
   709     000A                     	;# 
   710     000B                     	;# 
   711     000C                     	;# 
   712     000D                     	;# 
   713     000E                     	;# 
   714     000E                     	;# 
   715     000F                     	;# 
   716     0010                     	;# 
   717     0011                     	;# 
   718     0012                     	;# 
   719     0013                     	;# 
   720     0014                     	;# 
   721     0015                     	;# 
   722     0015                     	;# 
   723     0016                     	;# 
   724     0017                     	;# 
   725     0018                     	;# 
   726     0019                     	;# 
   727     001A                     	;# 
   728     001B                     	;# 
   729     001B                     	;# 
   730     001C                     	;# 
   731     001D                     	;# 
   732     001E                     	;# 
   733     001F                     	;# 
   734     0081                     	;# 
   735     0085                     	;# 
   736     0086                     	;# 
   737     0087                     	;# 
   738     0088                     	;# 
   739     0089                     	;# 
   740     008C                     	;# 
   741     008D                     	;# 
   742     008E                     	;# 
   743     008F                     	;# 
   744     0090                     	;# 
   745     0091                     	;# 
   746     0092                     	;# 
   747     0093                     	;# 
   748     0093                     	;# 
   749     0093                     	;# 
   750     0094                     	;# 
   751     0095                     	;# 
   752     0096                     	;# 
   753     0097                     	;# 
   754     0098                     	;# 
   755     0099                     	;# 
   756     009A                     	;# 
   757     009B                     	;# 
   758     009C                     	;# 
   759     009D                     	;# 
   760     009E                     	;# 
   761     009F                     	;# 
   762     0105                     	;# 
   763     0107                     	;# 
   764     0108                     	;# 
   765     0109                     	;# 
   766     010C                     	;# 
   767     010C                     	;# 
   768     010D                     	;# 
   769     010E                     	;# 
   770     010F                     	;# 
   771     0185                     	;# 
   772     0187                     	;# 
   773     0188                     	;# 
   774     0189                     	;# 
   775     018C                     	;# 
   776     018D                     	;# 
   777                           
   778                           	psect	idataBANK0
   779     04C3                     __pidataBANK0:
   780                           
   781                           ;initializer for _cur_data
   782     04C3  3420               	retlw	32
   783                           
   784                           ;initializer for _pre_data
   785     04C4  3420               	retlw	32
   786                           
   787                           	psect	idataBANK1
   788     042B                     __pidataBANK1:
   789                           
   790                           ;initializer for _seg_data
   791     042B  343F               	retlw	63
   792     042C  3400               	retlw	0
   793     042D  3406               	retlw	6
   794     042E  3400               	retlw	0
   795     042F  345B               	retlw	91
   796     0430  3400               	retlw	0
   797     0431  344F               	retlw	79
   798     0432  3400               	retlw	0
   799     0433  3466               	retlw	102
   800     0434  3400               	retlw	0
   801     0435  346D               	retlw	109
   802     0436  3400               	retlw	0
   803     0437  347D               	retlw	125
   804     0438  3400               	retlw	0
   805     0439  3407               	retlw	7
   806     043A  3400               	retlw	0
   807     043B  347F               	retlw	127
   808     043C  3400               	retlw	0
   809     043D  346F               	retlw	111
   810     043E  3400               	retlw	0
   811     001E                     _ADRESH	set	30
   812     001F                     _ADCON0bits	set	31
   813     001F                     _ADCON0	set	31
   814     0019                     _TXREG	set	25
   815     001A                     _RCREG	set	26
   816     000B                     _INTCONbits	set	11
   817     0001                     _TMR0	set	1
   818     0008                     _PORTD	set	8
   819     0007                     _PORTC	set	7
   820     00F9                     _GO_nDONE	set	249
   821     0064                     _TXIF	set	100
   822     0065                     _RCIF	set	101
   823     00C1                     _OERR	set	193
   824     00C4                     _CREN	set	196
   825     00C6                     _RX9	set	198
   826     005F                     _GIE	set	95
   827     005E                     _PEIE	set	94
   828     00C7                     _SPEN	set	199
   829     005A                     _TMR0IF	set	90
   830     0033                     _RB3	set	51
   831     0032                     _RB2	set	50
   832     0031                     _RB1	set	49
   833     0030                     _RB0	set	48
   834     0036                     _RB6	set	54
   835     0037                     _RB7	set	55
   836     009E                     _ADRESL	set	158
   837     009F                     _ADCON1	set	159
   838     0099                     _SPBRG	set	153
   839     0081                     _OPTION_REG	set	129
   840     0095                     _WPUB	set	149
   841     0089                     _TRISEbits	set	137
   842     0088                     _TRISD	set	136
   843     0086                     _TRISBbits	set	134
   844     0087                     _TRISC	set	135
   845     0465                     _RCIE	set	1125
   846     0464                     _TXIE	set	1124
   847     04C5                     _TXEN	set	1221
   848     04C6                     _TX9	set	1222
   849     04C4                     _SYNC	set	1220
   850     04C2                     _BRGH	set	1218
   851     040F                     _nRBPU	set	1039
   852     043F                     _TRISC7	set	1087
   853     043E                     _TRISC6	set	1086
   854     0188                     _ANSELbits	set	392
   855     0189                     _ANSELH	set	393
   856     0188                     _ANSEL	set	392
   857     0C3E                     _RCIDL	set	3134
   858     0C3B                     _BRG16	set	3131
   859                           
   860                           	psect	strings
   861     0486                     __pstrings:
   862     0486                     stringtab:
   863     0486                     __stringtab:
   864     0486                     stringcode:	
   865                           ;	String table - string pointers are 1 byte each
   866                           
   867     0486                     stringdir:
   868     0486  3004               	movlw	high stringdir
   869     0487  008A               	movwf	10
   870     0488  0804               	movf	4,w
   871     0489  0A84               	incf	4,f
   872     048A  0782               	addwf	2,f
   873     048B                     __stringbase:
   874     048B  3400               	retlw	0
   875     048C                     __end_of__stringtab:
   876     048C                     STR_1:
   877     048C  3445               	retlw	69	;'E'
   878     048D  3472               	retlw	114	;'r'
   879     048E  3472               	retlw	114	;'r'
   880     048F  346F               	retlw	111	;'o'
   881     0490  3472               	retlw	114	;'r'
   882     0491  3400               	retlw	0
   883                           
   884                           	psect	cinit
   885     000F                     start_initialization:	
   886                           ; #config settings
   887                           
   888     000F                     __initialization:
   889                           
   890                           ; Initialize objects allocated to BANK1
   891     000F  1383               	bcf	3,7	;select IRP bank0
   892     0010  30B4               	movlw	low (__pdataBANK1+20)
   893     0011  00FD               	movwf	btemp+-1
   894     0012  3004               	movlw	high __pidataBANK1
   895     0013  00FE               	movwf	btemp
   896     0014  302B               	movlw	low __pidataBANK1
   897     0015  00FF               	movwf	btemp+1
   898     0016  30A0               	movlw	low __pdataBANK1
   899     0017  0084               	movwf	4
   900     0018  120A  118A  2443  120A  118A  	fcall	init_ram0
   901                           
   902                           ; Initialize objects allocated to BANK0
   903     001D  120A  118A  24C3  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   904     0022  00E6               	movwf	__pdataBANK0& (0+127)
   905     0023  120A  118A  24C4  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   906     0028  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   907                           
   908                           ; Clear objects allocated to BANK0
   909     0029  3020               	movlw	low __pbssBANK0
   910     002A  0084               	movwf	4
   911     002B  3053               	movlw	low (__pbssBANK0+51)
   912     002C  120A  118A  24A7  120A  118A  	fcall	clear_ram0
   913                           
   914                           ; Clear objects allocated to COMMON
   915     0031  01F6               	clrf	__pbssCOMMON& (0+127)
   916     0032  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   917     0033  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   918     0034  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   919     0035  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
   920     0036                     end_of_initialization:	
   921                           ;End of C runtime variable initialization code
   922                           
   923     0036                     __end_of__initialization:
   924     0036  0183               	clrf	3
   925     0037  120A  118A  2BB8   	ljmp	_main	;jump to C main() function
   926                           
   927                           	psect	bssCOMMON
   928     0076                     __pbssCOMMON:
   929     0076                     _appledData:
   930     0076                     	ds	3
   931     0079                     _pressed:
   932     0079                     	ds	2
   933                           
   934                           	psect	bssBANK0
   935     0020                     __pbssBANK0:
   936     0020                     _values:
   937     0020                     	ds	10
   938     002A                     _datas:
   939     002A                     	ds	6
   940     0030                     _appTimer0Data:
   941     0030                     	ds	5
   942     0035                     _app_uartData:
   943     0035                     	ds	4
   944     0039                     _app_adcData:
   945     0039                     	ds	3
   946     003C                     _appBtn2Data:
   947     003C                     	ds	3
   948     003F                     _appled7Data:
   949     003F                     	ds	3
   950     0042                     _appBtn1Data:
   951     0042                     	ds	3
   952     0045                     _count_delay:
   953     0045                     	ds	2
   954     0047                     _pass:
   955     0047                     	ds	2
   956     0049                     _data_receiving:
   957     0049                     	ds	2
   958     004B                     _index_data:
   959     004B                     	ds	2
   960     004D                     _do_actionn:
   961     004D                     	ds	2
   962     004F                     _next_index_led:
   963     004F                     	ds	2
   964     0051                     _count_time:
   965     0051                     	ds	2
   966                           
   967                           	psect	dataBANK0
   968     0066                     __pdataBANK0:
   969     0066                     _cur_data:
   970     0066                     	ds	1
   971     0067                     _pre_data:
   972     0067                     	ds	1
   973                           
   974                           	psect	dataBANK1
   975     00A0                     __pdataBANK1:
   976     00A0                     _seg_data:
   977     00A0                     	ds	20
   978                           
   979                           	psect	inittext
   980     043F                     init_fetch0:	
   981                           ;	Called with low address in FSR and high address in W
   982                           
   983     043F  087E               	movf	btemp,w
   984     0440  008A               	movwf	10
   985     0441  087F               	movf	btemp+1,w
   986     0442  0082               	movwf	2
   987     0443                     init_ram0:	
   988                           ;Called with:
   989                           ;	high address of idata address in btemp 
   990                           ;	low address of idata address in btemp+1 
   991                           ;	low address of data in FSR
   992                           ;	high address + 1 of data in btemp-1
   993                           
   994     0443  120A  118A  243F  120A  118A  	fcall	init_fetch0
   995     0448  0080               	movwf	0
   996     0449  0A84               	incf	4,f
   997     044A  0804               	movf	4,w
   998     044B  067D               	xorwf	btemp+-1,w
   999     044C  1903               	btfsc	3,2
  1000     044D  3400               	retlw	0
  1001     044E  0AFF               	incf	btemp+1,f
  1002     044F  1903               	btfsc	3,2
  1003     0450  0AFE               	incf	btemp,f
  1004     0451  2C43               	goto	init_ram0
  1005                           
  1006                           	psect	clrtext
  1007     04A7                     clear_ram0:	
  1008                           ;	Called with FSR containing the base address, and
  1009                           ;	W with the last address+1
  1010                           
  1011     04A7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1012     04A8                     clrloop0:
  1013     04A8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1014     04A9  0A84               	incf	4,f	;increment pointer
  1015     04AA  0604               	xorwf	4,w	;XOR with final address
  1016     04AB  1903               	btfsc	3,2	;have we reached the end yet?
  1017     04AC  3400               	retlw	0	;all done for this memory range, return
  1018     04AD  0604               	xorwf	4,w	;XOR again to restore value
  1019     04AE  2CA8               	goto	clrloop0	;do the next byte
  1020                           
  1021                           	psect	cstackCOMMON
  1022     0070                     __pcstackCOMMON:
  1023     0070                     ?_app_led7_init:
  1024     0070                     ?_app_uart_init:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027     0070                     ?_app_led7_task:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030     0070                     ?_app_uart_task:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033     0070                     ?_system_init:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036     0070                     ?_main:	
  1037                           ; 1 bytes @ 0x0
  1038                           
  1039     0070                     ?_timer_isr:	
  1040                           ; 1 bytes @ 0x0
  1041                           
  1042     0070                     ??_timer_isr:	
  1043                           ; 1 bytes @ 0x0
  1044                           
  1045     0070                     ?_common_init:	
  1046                           ; 1 bytes @ 0x0
  1047                           
  1048     0070                     ?_transmit_init:	
  1049                           ; 1 bytes @ 0x0
  1050                           
  1051     0070                     ?_receive_init:	
  1052                           ; 1 bytes @ 0x0
  1053                           
  1054     0070                     ?_getdata:	
  1055                           ; 1 bytes @ 0x0
  1056                           
  1057     0070                     ?_send_chardata:	
  1058                           ; 1 bytes @ 0x0
  1059                           
  1060     0070                     ?_send_stringdata:	
  1061                           ; 1 bytes @ 0x0
  1062                           
  1063     0070                     ?_check_err:	
  1064                           ; 1 bytes @ 0x0
  1065                           
  1066     0070                     ?_action:	
  1067                           ; 1 bytes @ 0x0
  1068                           
  1069                           
  1070                           ; 1 bytes @ 0x0
  1071     0070                     	ds	2
  1072     0072                     ??_app_led7_init:
  1073     0072                     ??_app_uart_init:	
  1074                           ; 1 bytes @ 0x2
  1075                           
  1076     0072                     ??_system_init:	
  1077                           ; 1 bytes @ 0x2
  1078                           
  1079     0072                     ?_display:	
  1080                           ; 1 bytes @ 0x2
  1081                           
  1082     0072                     ??_common_init:	
  1083                           ; 1 bytes @ 0x2
  1084                           
  1085     0072                     ??_transmit_init:	
  1086                           ; 1 bytes @ 0x2
  1087                           
  1088     0072                     ??_receive_init:	
  1089                           ; 1 bytes @ 0x2
  1090                           
  1091     0072                     ??_getdata:	
  1092                           ; 1 bytes @ 0x2
  1093                           
  1094     0072                     ??_send_chardata:	
  1095                           ; 1 bytes @ 0x2
  1096                           
  1097     0072                     ??_check_err:	
  1098                           ; 1 bytes @ 0x2
  1099                           
  1100     0072                     ?___wmul:	
  1101                           ; 1 bytes @ 0x2
  1102                           
  1103     0072                     ?___awdiv:	
  1104                           ; 2 bytes @ 0x2
  1105                           
  1106     0072                     send_chardata@data:	
  1107                           ; 2 bytes @ 0x2
  1108                           
  1109     0072                     display@i:	
  1110                           ; 1 bytes @ 0x2
  1111                           
  1112     0072                     check_err@i:	
  1113                           ; 2 bytes @ 0x2
  1114                           
  1115     0072                     ___wmul@multiplier:	
  1116                           ; 2 bytes @ 0x2
  1117                           
  1118     0072                     ___awdiv@divisor:	
  1119                           ; 2 bytes @ 0x2
  1120                           
  1121                           
  1122                           ; 2 bytes @ 0x2
  1123     0072                     	ds	1
  1124     0073                     ??_send_stringdata:
  1125     0073                     send_stringdata@s:	
  1126                           ; 1 bytes @ 0x3
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0x3
  1130     0073                     	ds	1
  1131     0074                     ??_display:
  1132     0074                     ___wmul@multiplicand:	
  1133                           ; 1 bytes @ 0x4
  1134                           
  1135     0074                     ___awdiv@dividend:	
  1136                           ; 2 bytes @ 0x4
  1137                           
  1138                           
  1139                           ; 2 bytes @ 0x4
  1140     0074                     	ds	2
  1141     0076                     ??_main:
  1142     0076                     ??_handle_value:	
  1143                           ; 1 bytes @ 0x6
  1144                           
  1145     0076                     ??___wmul:	
  1146                           ; 1 bytes @ 0x6
  1147                           
  1148     0076                     ??___awdiv:	
  1149                           ; 1 bytes @ 0x6
  1150                           
  1151     0076                     ??___awmod:	
  1152                           ; 1 bytes @ 0x6
  1153                           
  1154                           
  1155                           	psect	cstackBANK0
  1156     0053                     __pcstackBANK0:	
  1157                           ; 1 bytes @ 0x6
  1158                           
  1159     0053                     ___awdiv@counter:
  1160     0053                     ___wmul@product:	
  1161                           ; 1 bytes @ 0x0
  1162                           
  1163                           
  1164                           ; 2 bytes @ 0x0
  1165     0053                     	ds	1
  1166     0054                     ___awdiv@sign:
  1167                           
  1168                           ; 1 bytes @ 0x1
  1169     0054                     	ds	1
  1170     0055                     ??_action:
  1171     0055                     ___awdiv@quotient:	
  1172                           ; 1 bytes @ 0x2
  1173                           
  1174                           
  1175                           ; 2 bytes @ 0x2
  1176     0055                     	ds	2
  1177     0057                     ?___awmod:
  1178     0057                     ___awmod@divisor:	
  1179                           ; 2 bytes @ 0x4
  1180                           
  1181                           
  1182                           ; 2 bytes @ 0x4
  1183     0057                     	ds	2
  1184     0059                     ___awmod@dividend:
  1185                           
  1186                           ; 2 bytes @ 0x6
  1187     0059                     	ds	2
  1188     005B                     ___awmod@counter:
  1189     005B                     action@a:	
  1190                           ; 1 bytes @ 0x8
  1191                           
  1192                           
  1193                           ; 2 bytes @ 0x8
  1194     005B                     	ds	1
  1195     005C                     ___awmod@sign:
  1196                           
  1197                           ; 1 bytes @ 0x9
  1198     005C                     	ds	1
  1199     005D                     ?_handle_value:
  1200     005D                     handle_value@value:	
  1201                           ; 1 bytes @ 0xA
  1202                           
  1203     005D                     action@b:	
  1204                           ; 2 bytes @ 0xA
  1205                           
  1206                           
  1207                           ; 2 bytes @ 0xA
  1208     005D                     	ds	2
  1209     005F                     ??_app_led7_task:
  1210     005F                     action@c:	
  1211                           ; 1 bytes @ 0xC
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0xC
  1215     005F                     	ds	2
  1216     0061                     action@d:
  1217                           
  1218                           ; 2 bytes @ 0xE
  1219     0061                     	ds	2
  1220     0063                     action@data:
  1221                           
  1222                           ; 1 bytes @ 0x10
  1223     0063                     	ds	1
  1224     0064                     ??_app_uart_task:
  1225                           
  1226                           ; 1 bytes @ 0x11
  1227     0064                     	ds	2
  1228                           
  1229                           	psect	maintext
  1230     03B8                     __pmaintext:	
  1231 ;;
  1232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1233 ;;
  1234 ;; *************** function _main *****************
  1235 ;; Defined at:
  1236 ;;		line 25 in file "main.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;		None
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;		None
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : B00/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         0       0       0       0       0
  1252 ;;      Temps:          0       0       0       0       0
  1253 ;;      Totals:         0       0       0       0       0
  1254 ;;Total ram usage:        0 bytes
  1255 ;; Hardware stack levels required when called: 4
  1256 ;; This function calls:
  1257 ;;		_app_led7_init
  1258 ;;		_app_led7_task
  1259 ;;		_app_uart_init
  1260 ;;		_app_uart_task
  1261 ;;		_system_init
  1262 ;; This function is called by:
  1263 ;;		Startup code after reset
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267     03B8                     _main:	
  1268                           ;psect for function _main
  1269                           
  1270     03B8                     l1801:	
  1271                           ;incstack = 0
  1272                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1273                           
  1274                           
  1275                           ;main.c: 26:     ANSEL = 0x00;
  1276     03B8  1683               	bsf	3,5	;RP0=1, select bank3
  1277     03B9  1703               	bsf	3,6	;RP1=1, select bank3
  1278     03BA  0188               	clrf	8	;volatile
  1279                           
  1280                           ;main.c: 27:     ANSELH = 0x00;
  1281     03BB  0189               	clrf	9	;volatile
  1282     03BC                     l1803:
  1283                           
  1284                           ;main.c: 28:     nRBPU = 0;
  1285     03BC  1683               	bsf	3,5	;RP0=1, select bank1
  1286     03BD  1303               	bcf	3,6	;RP1=0, select bank1
  1287     03BE  1381               	bcf	1,7	;volatile
  1288     03BF                     l1805:
  1289                           
  1290                           ;main.c: 29:     WPUB = 0xFF;
  1291     03BF  30FF               	movlw	255
  1292     03C0  0095               	movwf	21	;volatile
  1293     03C1                     l1807:
  1294                           
  1295                           ;main.c: 30:     system_init();
  1296     03C1  120A  118A  23FD  120A  118A  	fcall	_system_init
  1297     03C6                     l1809:
  1298                           
  1299                           ;main.c: 35:     app_led7_init();
  1300     03C6  120A  118A  24BD  120A  118A  	fcall	_app_led7_init
  1301     03CB                     l1811:
  1302                           
  1303                           ;main.c: 36:     app_uart_init();
  1304     03CB  120A  118A  2452  120A  118A  	fcall	_app_uart_init
  1305     03D0                     l1813:
  1306                           
  1307                           ;main.c: 42:         app_led7_task();
  1308     03D0  120A  118A  2105  120A  118A  	fcall	_app_led7_task
  1309     03D5                     l1815:
  1310                           
  1311                           ;main.c: 43:         app_uart_task();
  1312     03D5  120A  118A  2195  120A  118A  	fcall	_app_uart_task
  1313     03DA  2BD0               	goto	l1813
  1314     03DB  120A  118A  280C   	ljmp	start
  1315     03DE                     __end_of_main:
  1316                           
  1317                           	psect	text1
  1318     03FD                     __ptext1:	
  1319 ;; *************** function _system_init *****************
  1320 ;; Defined at:
  1321 ;;		line 4 in file "main.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		status,2
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 1
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349     03FD                     _system_init:	
  1350                           ;psect for function _system_init
  1351                           
  1352     03FD                     l1143:	
  1353                           ;incstack = 0
  1354                           ; Regs used in _system_init: [status,2]
  1355                           
  1356                           
  1357                           ;main.c: 6:     TRISC = 0x00;
  1358     03FD  1683               	bsf	3,5	;RP0=1, select bank1
  1359     03FE  1303               	bcf	3,6	;RP1=0, select bank1
  1360     03FF  0187               	clrf	7	;volatile
  1361                           
  1362                           ;main.c: 7:     PORTC = 0x00;
  1363     0400  1283               	bcf	3,5	;RP0=0, select bank0
  1364     0401  1303               	bcf	3,6	;RP1=0, select bank0
  1365     0402  0187               	clrf	7	;volatile
  1366     0403                     l1145:
  1367                           
  1368                           ;main.c: 9:     TRISBbits.TRISB7 = 1;
  1369     0403  1683               	bsf	3,5	;RP0=1, select bank1
  1370     0404  1303               	bcf	3,6	;RP1=0, select bank1
  1371     0405  1786               	bsf	6,7	;volatile
  1372     0406                     l1147:
  1373                           
  1374                           ;main.c: 10:     TRISBbits.TRISB6 = 1;
  1375     0406  1706               	bsf	6,6	;volatile
  1376                           
  1377                           ;main.c: 12:     TRISD = 0x00;
  1378     0407  0188               	clrf	8	;volatile
  1379                           
  1380                           ;main.c: 13:     PORTD = 0x00;
  1381     0408  1283               	bcf	3,5	;RP0=0, select bank0
  1382     0409  1303               	bcf	3,6	;RP1=0, select bank0
  1383     040A  0188               	clrf	8	;volatile
  1384     040B                     l1149:
  1385                           
  1386                           ;main.c: 14:     TRISBbits.TRISB0 = 0;
  1387     040B  1683               	bsf	3,5	;RP0=1, select bank1
  1388     040C  1303               	bcf	3,6	;RP1=0, select bank1
  1389     040D  1006               	bcf	6,0	;volatile
  1390     040E                     l1151:
  1391                           
  1392                           ;main.c: 15:     TRISBbits.TRISB1 = 0;
  1393     040E  1086               	bcf	6,1	;volatile
  1394     040F                     l1153:
  1395                           
  1396                           ;main.c: 16:     TRISBbits.TRISB2 = 0;
  1397     040F  1106               	bcf	6,2	;volatile
  1398     0410                     l1155:
  1399                           
  1400                           ;main.c: 17:     TRISBbits.TRISB3 = 0;
  1401     0410  1186               	bcf	6,3	;volatile
  1402     0411                     l1157:
  1403                           
  1404                           ;main.c: 19:     TRISC6 = 0;
  1405     0411  1307               	bcf	7,6	;volatile
  1406     0412                     l1159:
  1407                           
  1408                           ;main.c: 20:     TRISC7 = 1;
  1409     0412  1787               	bsf	7,7	;volatile
  1410     0413                     l1161:
  1411                           
  1412                           ;main.c: 22:     TRISEbits.TRISE2 = 1;
  1413     0413  1509               	bsf	9,2	;volatile
  1414     0414                     l35:
  1415     0414  0008               	return
  1416     0415                     __end_of_system_init:
  1417                           
  1418                           	psect	text2
  1419     0195                     __ptext2:	
  1420 ;; *************** function _app_uart_task *****************
  1421 ;; Defined at:
  1422 ;;		line 119 in file "source_uart.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          0       2       0       0       0
  1439 ;;      Totals:         0       2       0       0       0
  1440 ;;Total ram usage:        2 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; Hardware stack levels required when called: 3
  1443 ;; This function calls:
  1444 ;;		_action
  1445 ;;		_getdata
  1446 ;;		_send_chardata
  1447 ;;		_send_stringdata
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453     0195                     _app_uart_task:	
  1454                           ;psect for function _app_uart_task
  1455                           
  1456     0195                     l1751:	
  1457                           ;incstack = 0
  1458                           ; Regs used in _app_uart_task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1459                           
  1460                           
  1461                           ;source_uart.c: 120:     switch (app_uartData.state) {
  1462     0195  2A01               	goto	l1789
  1463     0196                     l1753:
  1464                           
  1465                           ;source_uart.c: 122:         {;source_uart.c: 123:             app_uartData.receive_stat
      +                          e = wait_receive;
  1466     0196  01B6               	clrf	_app_uartData+1
  1467     0197                     l1755:
  1468                           
  1469                           ;source_uart.c: 124:             app_uartData.is_err = '0';
  1470     0197  3030               	movlw	48
  1471     0198  00B7               	movwf	_app_uartData+2
  1472     0199                     l1757:
  1473                           
  1474                           ;source_uart.c: 125:             app_uartData.state = uart_wait;
  1475     0199  3003               	movlw	3
  1476     019A  1283               	bcf	3,5	;RP0=0, select bank0
  1477     019B  1303               	bcf	3,6	;RP1=0, select bank0
  1478     019C  00B5               	movwf	_app_uartData
  1479                           
  1480                           ;source_uart.c: 126:             break;
  1481     019D  2A19               	goto	l316
  1482     019E                     l1759:
  1483                           
  1484                           ;source_uart.c: 129:         {;source_uart.c: 130:             app_uartData.value = getd
      +                          ata();
  1485     019E  120A  118A  2478  120A  118A  	fcall	_getdata
  1486     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1487     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1488     01A5  00B8               	movwf	_app_uartData+3
  1489     01A6                     l1761:
  1490                           
  1491                           ;source_uart.c: 131:             action(app_uartData.value);
  1492     01A6  0838               	movf	_app_uartData+3,w
  1493     01A7  120A  118A  203A  120A  118A  	fcall	_action
  1494     01AC  2999               	goto	l1757
  1495     01AD                     l1765:
  1496                           
  1497                           ;source_uart.c: 137:         {;source_uart.c: 138:             if (pass) {
  1498     01AD  0847               	movf	_pass,w
  1499     01AE  0448               	iorwf	_pass+1,w
  1500     01AF  1903               	btfsc	3,2
  1501     01B0  29B2               	goto	u1081
  1502     01B1  29B3               	goto	u1080
  1503     01B2                     u1081:
  1504     01B2  2999               	goto	l1757
  1505     01B3                     u1080:
  1506     01B3                     l1767:
  1507                           
  1508                           ;source_uart.c: 139:                 if (app_uartData.is_err == '0') {
  1509     01B3  3030               	movlw	48
  1510     01B4  0637               	xorwf	_app_uartData+2,w
  1511     01B5  1D03               	btfss	3,2
  1512     01B6  29B8               	goto	u1091
  1513     01B7  29B9               	goto	u1090
  1514     01B8                     u1091:
  1515     01B8  29D7               	goto	l1771
  1516     01B9                     u1090:
  1517     01B9                     l1769:
  1518                           
  1519                           ;source_uart.c: 140:                     send_chardata(datas[1]);
  1520     01B9  082B               	movf	_datas+1,w
  1521     01BA  120A  118A  249D  120A  118A  	fcall	_send_chardata
  1522                           
  1523                           ;source_uart.c: 141:                     send_chardata(datas[2]);
  1524     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  1525     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  1526     01C1  082C               	movf	_datas+2,w
  1527     01C2  120A  118A  249D  120A  118A  	fcall	_send_chardata
  1528                           
  1529                           ;source_uart.c: 142:                     send_chardata(datas[3]);
  1530     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1531     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1532     01C9  082D               	movf	_datas+3,w
  1533     01CA  120A  118A  249D  120A  118A  	fcall	_send_chardata
  1534                           
  1535                           ;source_uart.c: 143:                     send_chardata(datas[4]);
  1536     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1537     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1538     01D1  082E               	movf	_datas+4,w
  1539     01D2  120A  118A  249D  120A  118A  	fcall	_send_chardata
  1540     01D7                     l1771:
  1541                           
  1542                           ;source_uart.c: 145:                 if (app_uartData.is_err == '1')
  1543     01D7  3031               	movlw	49
  1544     01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1545     01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1546     01DA  0637               	xorwf	_app_uartData+2,w
  1547     01DB  1D03               	btfss	3,2
  1548     01DC  29DE               	goto	u1101
  1549     01DD  29DF               	goto	u1100
  1550     01DE                     u1101:
  1551     01DE  29E5               	goto	l1775
  1552     01DF                     u1100:
  1553     01DF                     l1773:
  1554                           
  1555                           ;source_uart.c: 146:                     send_stringdata("Error");
  1556     01DF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1557     01E0  120A  118A  23DE  120A  118A  	fcall	_send_stringdata
  1558     01E5                     l1775:
  1559                           
  1560                           ;source_uart.c: 147:                 pass = 0;
  1561     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1562     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1563     01E7  01C7               	clrf	_pass
  1564     01E8  01C8               	clrf	_pass+1
  1565     01E9  2999               	goto	l1757
  1566     01EA                     l312:	
  1567                           ;source_uart.c: 151:         };source_uart.c: 152:         case uart_wait:
  1568                           
  1569                           
  1570                           ;source_uart.c: 153:         {;source_uart.c: 154:             if (!RCIDL)
  1571     01EA  1683               	bsf	3,5	;RP0=1, select bank3
  1572     01EB  1703               	bsf	3,6	;RP1=1, select bank3
  1573     01EC  1B07               	btfsc	7,6	;volatile
  1574     01ED  29EF               	goto	u1111
  1575     01EE  29F0               	goto	u1110
  1576     01EF                     u1111:
  1577     01EF  29F4               	goto	l1781
  1578     01F0                     u1110:
  1579     01F0                     l1779:
  1580                           
  1581                           ;source_uart.c: 155:                 app_uartData.state = uart_getdata;
  1582     01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1583     01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1584     01F2  01B5               	clrf	_app_uartData
  1585     01F3  0AB5               	incf	_app_uartData,f
  1586     01F4                     l1781:
  1587                           
  1588                           ;source_uart.c: 156:             if (do_actionn) {
  1589     01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1590     01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1591     01F6  084D               	movf	_do_actionn,w
  1592     01F7  044E               	iorwf	_do_actionn+1,w
  1593     01F8  1903               	btfsc	3,2
  1594     01F9  29FB               	goto	u1121
  1595     01FA  29FC               	goto	u1120
  1596     01FB                     u1121:
  1597     01FB  2A19               	goto	l316
  1598     01FC                     u1120:
  1599     01FC                     l1783:
  1600                           
  1601                           ;source_uart.c: 157:                 app_uartData.state = uart_senddata;
  1602     01FC  3002               	movlw	2
  1603     01FD  00B5               	movwf	_app_uartData
  1604     01FE                     l1785:
  1605                           
  1606                           ;source_uart.c: 158:                 do_actionn = 0;
  1607     01FE  01CD               	clrf	_do_actionn
  1608     01FF  01CE               	clrf	_do_actionn+1
  1609     0200  2A19               	goto	l316
  1610     0201                     l1789:
  1611     0201  1283               	bcf	3,5	;RP0=0, select bank0
  1612     0202  1303               	bcf	3,6	;RP1=0, select bank0
  1613     0203  0835               	movf	_app_uartData,w
  1614     0204  00E4               	movwf	??_app_uart_task
  1615     0205  01E5               	clrf	??_app_uart_task+1
  1616                           
  1617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1618                           ; Switch size 1, requested type "simple"
  1619                           ; Number of cases is 1, Range of values is 0 to 0
  1620                           ; switch strategies available:
  1621                           ; Name         Instructions Cycles
  1622                           ; simple_byte            4     3 (average)
  1623                           ; direct_byte           11     8 (fixed)
  1624                           ; jumptable            260     6 (fixed)
  1625                           ;	Chosen strategy is simple_byte
  1626     0206  0865               	movf	??_app_uart_task+1,w
  1627     0207  3A00               	xorlw	0	; case 0
  1628     0208  1903               	skipnz
  1629     0209  2A0B               	goto	l2053
  1630     020A  2A19               	goto	l316
  1631     020B                     l2053:
  1632                           
  1633                           ; Switch size 1, requested type "simple"
  1634                           ; Number of cases is 4, Range of values is 0 to 3
  1635                           ; switch strategies available:
  1636                           ; Name         Instructions Cycles
  1637                           ; simple_byte           13     7 (average)
  1638                           ; direct_byte           20     8 (fixed)
  1639                           ; jumptable            260     6 (fixed)
  1640                           ;	Chosen strategy is simple_byte
  1641     020B  0864               	movf	??_app_uart_task,w
  1642     020C  3A00               	xorlw	0	; case 0
  1643     020D  1903               	skipnz
  1644     020E  2996               	goto	l1753
  1645     020F  3A01               	xorlw	1	; case 1
  1646     0210  1903               	skipnz
  1647     0211  299E               	goto	l1759
  1648     0212  3A03               	xorlw	3	; case 2
  1649     0213  1903               	skipnz
  1650     0214  29AD               	goto	l1765
  1651     0215  3A01               	xorlw	1	; case 3
  1652     0216  1903               	skipnz
  1653     0217  29EA               	goto	l312
  1654     0218  2A19               	goto	l316
  1655     0219                     l316:
  1656     0219  0008               	return
  1657     021A                     __end_of_app_uart_task:
  1658                           
  1659                           	psect	text3
  1660     03DE                     __ptext3:	
  1661 ;; *************** function _send_stringdata *****************
  1662 ;; Defined at:
  1663 ;;		line 56 in file "source_uart.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  s               1    wreg     PTR unsigned char 
  1666 ;;		 -> STR_1(6), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  s               1    3[COMMON] PTR unsigned char 
  1669 ;;		 -> STR_1(6), 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         1       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0
  1682 ;;      Totals:         1       0       0       0       0
  1683 ;;Total ram usage:        1 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 2
  1686 ;; This function calls:
  1687 ;;		_send_chardata
  1688 ;; This function is called by:
  1689 ;;		_app_uart_task
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693     03DE                     _send_stringdata:	
  1694                           ;psect for function _send_stringdata
  1695                           
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _send_stringdata: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1699                           ;send_stringdata@s stored from wreg
  1700     03DE  00F3               	movwf	send_stringdata@s
  1701     03DF                     l1641:
  1702                           
  1703                           ;source_uart.c: 57:     while (*s)
  1704     03DF  2BF0               	goto	l1647
  1705     03E0                     l1643:
  1706                           
  1707                           ;source_uart.c: 58:         send_chardata(*s++);
  1708     03E0  0873               	movf	send_stringdata@s,w
  1709     03E1  0084               	movwf	4
  1710     03E2  120A  118A  2486  120A  118A  	fcall	stringdir
  1711     03E7  120A  118A  249D  120A  118A  	fcall	_send_chardata
  1712     03EC                     l1645:
  1713     03EC  3001               	movlw	1
  1714     03ED  00FF               	movwf	btemp+1
  1715     03EE  087F               	movf	btemp+1,w
  1716     03EF  07F3               	addwf	send_stringdata@s,f
  1717     03F0                     l1647:
  1718                           
  1719                           ;source_uart.c: 57:     while (*s)
  1720     03F0  0873               	movf	send_stringdata@s,w
  1721     03F1  0084               	movwf	4
  1722     03F2  120A  118A  2486  120A  118A  	fcall	stringdir
  1723     03F7  3A00               	xorlw	0
  1724     03F8  1D03               	skipz
  1725     03F9  2BFB               	goto	u981
  1726     03FA  2BFC               	goto	u980
  1727     03FB                     u981:
  1728     03FB  2BE0               	goto	l1643
  1729     03FC                     u980:
  1730     03FC                     l279:
  1731     03FC  0008               	return
  1732     03FD                     __end_of_send_stringdata:
  1733                           
  1734                           	psect	text4
  1735     049D                     __ptext4:	
  1736 ;; *************** function _send_chardata *****************
  1737 ;; Defined at:
  1738 ;;		line 51 in file "source_uart.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  data            1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  data            1    2[COMMON] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       0       0       0       0
  1753 ;;      Locals:         1       0       0       0       0
  1754 ;;      Temps:          0       0       0       0       0
  1755 ;;      Totals:         1       0       0       0       0
  1756 ;;Total ram usage:        1 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_send_stringdata
  1763 ;;		_app_uart_task
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767     049D                     _send_chardata:	
  1768                           ;psect for function _send_chardata
  1769                           
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _send_chardata: [wreg]
  1773                           ;send_chardata@data stored from wreg
  1774     049D  00F2               	movwf	send_chardata@data
  1775     049E                     l1497:
  1776     049E                     l270:	
  1777                           ;source_uart.c: 52:     while (!TXIF);
  1778                           
  1779     049E  1283               	bcf	3,5	;RP0=0, select bank0
  1780     049F  1303               	bcf	3,6	;RP1=0, select bank0
  1781     04A0  1E0C               	btfss	12,4	;volatile
  1782     04A1  2CA3               	goto	u681
  1783     04A2  2CA4               	goto	u680
  1784     04A3                     u681:
  1785     04A3  2C9E               	goto	l270
  1786     04A4                     u680:
  1787     04A4                     l1499:
  1788                           
  1789                           ;source_uart.c: 53:     TXREG = data;
  1790     04A4  0872               	movf	send_chardata@data,w
  1791     04A5  0099               	movwf	25	;volatile
  1792     04A6                     l273:
  1793     04A6  0008               	return
  1794     04A7                     __end_of_send_chardata:
  1795                           
  1796                           	psect	text5
  1797     0478                     __ptext5:	
  1798 ;; *************** function _getdata *****************
  1799 ;; Defined at:
  1800 ;;		line 42 in file "source_uart.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      unsigned char 
  1807 ;; Registers used:
  1808 ;;		wreg
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0
  1817 ;;      Totals:         0       0       0       0       0
  1818 ;;Total ram usage:        0 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_app_uart_task
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828     0478                     _getdata:	
  1829                           ;psect for function _getdata
  1830                           
  1831     0478                     l1633:	
  1832                           ;incstack = 0
  1833                           ; Regs used in _getdata: [wreg]
  1834                           
  1835                           
  1836                           ;source_uart.c: 43:     if (OERR) {
  1837     0478  1283               	bcf	3,5	;RP0=0, select bank0
  1838     0479  1303               	bcf	3,6	;RP1=0, select bank0
  1839     047A  1C98               	btfss	24,1	;volatile
  1840     047B  2C7D               	goto	u961
  1841     047C  2C7E               	goto	u960
  1842     047D                     u961:
  1843     047D  2C80               	goto	l264
  1844     047E                     u960:
  1845     047E                     l1635:
  1846                           
  1847                           ;source_uart.c: 44:         CREN = 0;
  1848     047E  1218               	bcf	24,4	;volatile
  1849                           
  1850                           ;source_uart.c: 45:         CREN = 1;
  1851     047F  1618               	bsf	24,4	;volatile
  1852     0480                     l264:
  1853     0480  1E8C               	btfss	12,5	;volatile
  1854     0481  2C83               	goto	u971
  1855     0482  2C84               	goto	u970
  1856     0483                     u971:
  1857     0483  2C80               	goto	l264
  1858     0484                     u970:
  1859     0484                     l1637:
  1860                           
  1861                           ;source_uart.c: 48:     return RCREG;
  1862     0484  081A               	movf	26,w	;volatile
  1863     0485                     l267:
  1864     0485  0008               	return
  1865     0486                     __end_of_getdata:
  1866                           
  1867                           	psect	text6
  1868     003A                     __ptext6:	
  1869 ;; *************** function _action *****************
  1870 ;; Defined at:
  1871 ;;		line 77 in file "source_uart.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  data            1    wreg     unsigned char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  data            1   16[BANK0 ] unsigned char 
  1876 ;;  d               2   14[BANK0 ] int 
  1877 ;;  c               2   12[BANK0 ] int 
  1878 ;;  b               2   10[BANK0 ] int 
  1879 ;;  a               2    8[BANK0 ] int 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       0       0       0       0
  1890 ;;      Locals:         0       9       0       0       0
  1891 ;;      Temps:          0       6       0       0       0
  1892 ;;      Totals:         0      15       0       0       0
  1893 ;;Total ram usage:       15 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 2
  1896 ;; This function calls:
  1897 ;;		___wmul
  1898 ;;		_check_err
  1899 ;; This function is called by:
  1900 ;;		_app_uart_task
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904     003A                     _action:	
  1905                           ;psect for function _action
  1906                           
  1907                           
  1908                           ;incstack = 0
  1909                           ; Regs used in _action: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1910                           ;action@data stored from wreg
  1911     003A  1283               	bcf	3,5	;RP0=0, select bank0
  1912     003B  1303               	bcf	3,6	;RP1=0, select bank0
  1913     003C  00E3               	movwf	action@data
  1914     003D                     l1649:
  1915                           
  1916                           ;source_uart.c: 78:     cur_data = data;
  1917     003D  0863               	movf	action@data,w
  1918     003E  00E6               	movwf	_cur_data
  1919     003F                     l1651:
  1920                           
  1921                           ;source_uart.c: 79:     if (cur_data == '@' && pre_data == '!') {
  1922     003F  3040               	movlw	64
  1923     0040  0666               	xorwf	_cur_data,w
  1924     0041  1D03               	btfss	3,2
  1925     0042  2844               	goto	u991
  1926     0043  2845               	goto	u990
  1927     0044                     u991:
  1928     0044  2857               	goto	l1661
  1929     0045                     u990:
  1930     0045                     l1653:
  1931     0045  3021               	movlw	33
  1932     0046  0667               	xorwf	_pre_data,w
  1933     0047  1D03               	btfss	3,2
  1934     0048  284A               	goto	u1001
  1935     0049  284B               	goto	u1000
  1936     004A                     u1001:
  1937     004A  2857               	goto	l1661
  1938     004B                     u1000:
  1939     004B                     l1655:
  1940                           
  1941                           ;source_uart.c: 80:         data_receiving = 1;
  1942     004B  3001               	movlw	1
  1943     004C  00C9               	movwf	_data_receiving
  1944     004D  3000               	movlw	0
  1945     004E  00CA               	movwf	_data_receiving+1
  1946                           
  1947                           ;source_uart.c: 81:         pass = 1;
  1948     004F  3001               	movlw	1
  1949     0050  00C7               	movwf	_pass
  1950     0051  3000               	movlw	0
  1951     0052  00C8               	movwf	_pass+1
  1952     0053                     l1657:
  1953                           
  1954                           ;source_uart.c: 82:         index_data = 0;
  1955     0053  01CB               	clrf	_index_data
  1956     0054  01CC               	clrf	_index_data+1
  1957     0055                     l1659:
  1958                           
  1959                           ;source_uart.c: 83:         app_uartData.is_err = '0';
  1960     0055  3030               	movlw	48
  1961     0056  00B7               	movwf	_app_uartData+2
  1962     0057                     l1661:
  1963                           
  1964                           ;source_uart.c: 85:     pre_data = cur_data;
  1965     0057  0866               	movf	_cur_data,w
  1966     0058  00E7               	movwf	_pre_data
  1967     0059                     l1663:
  1968                           
  1969                           ;source_uart.c: 87:     if (data_receiving) {
  1970     0059  0849               	movf	_data_receiving,w
  1971     005A  044A               	iorwf	_data_receiving+1,w
  1972     005B  1903               	btfsc	3,2
  1973     005C  285E               	goto	u1011
  1974     005D  285F               	goto	u1010
  1975     005E                     u1011:
  1976     005E  2874               	goto	l1673
  1977     005F                     u1010:
  1978     005F                     l1665:
  1979                           
  1980                           ;source_uart.c: 88:         datas[index_data] = data;
  1981     005F  084B               	movf	_index_data,w
  1982     0060  3E2A               	addlw	(low (_datas| 0))& (0+255)
  1983     0061  0084               	movwf	4
  1984     0062  0863               	movf	action@data,w
  1985     0063  1383               	bcf	3,7	;select IRP bank0
  1986     0064  0080               	movwf	0
  1987     0065                     l1667:
  1988                           
  1989                           ;source_uart.c: 89:         index_data++;
  1990     0065  3001               	movlw	1
  1991     0066  07CB               	addwf	_index_data,f
  1992     0067  1803               	skipnc
  1993     0068  0ACC               	incf	_index_data+1,f
  1994     0069  3000               	movlw	0
  1995     006A  07CC               	addwf	_index_data+1,f
  1996     006B                     l1669:
  1997                           
  1998                           ;source_uart.c: 90:         if (index_data == 6)
  1999     006B  3006               	movlw	6
  2000     006C  064B               	xorwf	_index_data,w
  2001     006D  044C               	iorwf	_index_data+1,w
  2002     006E  1D03               	btfss	3,2
  2003     006F  2871               	goto	u1021
  2004     0070  2872               	goto	u1020
  2005     0071                     u1021:
  2006     0071  2874               	goto	l1673
  2007     0072                     u1020:
  2008     0072                     l1671:
  2009                           
  2010                           ;source_uart.c: 91:             data_receiving = 0;
  2011     0072  01C9               	clrf	_data_receiving
  2012     0073  01CA               	clrf	_data_receiving+1
  2013     0074                     l1673:
  2014                           
  2015                           ;source_uart.c: 93:     if (data == 'a' && index_data == 6) {
  2016     0074  3061               	movlw	97
  2017     0075  0663               	xorwf	action@data,w
  2018     0076  1D03               	btfss	3,2
  2019     0077  2879               	goto	u1031
  2020     0078  287A               	goto	u1030
  2021     0079                     u1031:
  2022     0079  288B               	goto	l1681
  2023     007A                     u1030:
  2024     007A                     l1675:
  2025     007A  3006               	movlw	6
  2026     007B  064B               	xorwf	_index_data,w
  2027     007C  044C               	iorwf	_index_data+1,w
  2028     007D  1D03               	btfss	3,2
  2029     007E  2880               	goto	u1041
  2030     007F  2881               	goto	u1040
  2031     0080                     u1041:
  2032     0080  288B               	goto	l1681
  2033     0081                     u1040:
  2034     0081                     l1677:
  2035                           
  2036                           ;source_uart.c: 94:         do_actionn = 1;
  2037     0081  3001               	movlw	1
  2038     0082  00CD               	movwf	_do_actionn
  2039     0083  3000               	movlw	0
  2040     0084  00CE               	movwf	_do_actionn+1
  2041                           
  2042                           ;source_uart.c: 95:         pre_data = ' ';
  2043     0085  3020               	movlw	32
  2044     0086  00E7               	movwf	_pre_data
  2045                           
  2046                           ;source_uart.c: 96:         cur_data = ' ';
  2047     0087  3020               	movlw	32
  2048     0088  00E6               	movwf	_cur_data
  2049     0089                     l1679:
  2050                           
  2051                           ;source_uart.c: 97:         index_data = 0;
  2052     0089  01CB               	clrf	_index_data
  2053     008A  01CC               	clrf	_index_data+1
  2054     008B                     l1681:
  2055                           
  2056                           ;source_uart.c: 99:     if (do_actionn) {
  2057     008B  084D               	movf	_do_actionn,w
  2058     008C  044E               	iorwf	_do_actionn+1,w
  2059     008D  1903               	btfsc	3,2
  2060     008E  2890               	goto	u1051
  2061     008F  2891               	goto	u1050
  2062     0090                     u1051:
  2063     0090  2904               	goto	l298
  2064     0091                     u1050:
  2065     0091                     l1683:
  2066                           
  2067                           ;source_uart.c: 100:         check_err();
  2068     0091  120A  118A  235A  120A  118A  	fcall	_check_err
  2069     0096                     l1685:
  2070                           
  2071                           ;source_uart.c: 101:         if (app_uartData.is_err == '0') {
  2072     0096  3030               	movlw	48
  2073     0097  1283               	bcf	3,5	;RP0=0, select bank0
  2074     0098  1303               	bcf	3,6	;RP1=0, select bank0
  2075     0099  0637               	xorwf	_app_uartData+2,w
  2076     009A  1D03               	btfss	3,2
  2077     009B  289D               	goto	u1061
  2078     009C  289E               	goto	u1060
  2079     009D                     u1061:
  2080     009D  2904               	goto	l298
  2081     009E                     u1060:
  2082     009E                     l1687:
  2083                           
  2084                           ;source_uart.c: 102:             int a = datas[1] - '0';
  2085     009E  082B               	movf	_datas+1,w
  2086     009F  3ED0               	addlw	208
  2087     00A0  00DB               	movwf	action@a
  2088     00A1  30FF               	movlw	255
  2089     00A2  1803               	skipnc
  2090     00A3  3000               	movlw	0
  2091     00A4  00DC               	movwf	action@a+1
  2092                           
  2093                           ;source_uart.c: 103:             int b = datas[2] - '0';
  2094     00A5  082C               	movf	_datas+2,w
  2095     00A6  3ED0               	addlw	208
  2096     00A7  00DD               	movwf	action@b
  2097     00A8  30FF               	movlw	255
  2098     00A9  1803               	skipnc
  2099     00AA  3000               	movlw	0
  2100     00AB  00DE               	movwf	action@b+1
  2101                           
  2102                           ;source_uart.c: 104:             int c = datas[3] - '0';
  2103     00AC  082D               	movf	_datas+3,w
  2104     00AD  3ED0               	addlw	208
  2105     00AE  00DF               	movwf	action@c
  2106     00AF  30FF               	movlw	255
  2107     00B0  1803               	skipnc
  2108     00B1  3000               	movlw	0
  2109     00B2  00E0               	movwf	action@c+1
  2110                           
  2111                           ;source_uart.c: 105:             int d = datas[4] - '0';
  2112     00B3  082E               	movf	_datas+4,w
  2113     00B4  3ED0               	addlw	208
  2114     00B5  00E1               	movwf	action@d
  2115     00B6  30FF               	movlw	255
  2116     00B7  1803               	skipnc
  2117     00B8  3000               	movlw	0
  2118     00B9  00E2               	movwf	action@d+1
  2119     00BA                     l1689:
  2120                           
  2121                           ;source_uart.c: 106:             appled7Data.value = a * 1000 + b * 100 + c * 10 + d * 1
      +                          ;
  2122     00BA  085C               	movf	action@a+1,w
  2123     00BB  00F3               	movwf	___wmul@multiplier+1
  2124     00BC  085B               	movf	action@a,w
  2125     00BD  00F2               	movwf	___wmul@multiplier
  2126     00BE  30E8               	movlw	232
  2127     00BF  00F4               	movwf	___wmul@multiplicand
  2128     00C0  3003               	movlw	3
  2129     00C1  00F5               	movwf	___wmul@multiplicand+1
  2130     00C2  120A  118A  238D  120A  118A  	fcall	___wmul
  2131     00C7  0872               	movf	?___wmul,w
  2132     00C8  1283               	bcf	3,5	;RP0=0, select bank0
  2133     00C9  1303               	bcf	3,6	;RP1=0, select bank0
  2134     00CA  00D5               	movwf	??_action
  2135     00CB  0873               	movf	?___wmul+1,w
  2136     00CC  00D6               	movwf	??_action+1
  2137     00CD  085E               	movf	action@b+1,w
  2138     00CE  00F3               	movwf	___wmul@multiplier+1
  2139     00CF  085D               	movf	action@b,w
  2140     00D0  00F2               	movwf	___wmul@multiplier
  2141     00D1  3064               	movlw	100
  2142     00D2  00F4               	movwf	___wmul@multiplicand
  2143     00D3  3000               	movlw	0
  2144     00D4  00F5               	movwf	___wmul@multiplicand+1
  2145     00D5  120A  118A  238D  120A  118A  	fcall	___wmul
  2146     00DA  0872               	movf	?___wmul,w
  2147     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  2148     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  2149     00DD  0755               	addwf	??_action,w
  2150     00DE  00D7               	movwf	??_action+2
  2151     00DF  0873               	movf	?___wmul+1,w
  2152     00E0  1803               	skipnc
  2153     00E1  0A73               	incf	?___wmul+1,w
  2154     00E2  0756               	addwf	??_action+1,w
  2155     00E3  00D8               	movwf	??_action+3
  2156     00E4  0860               	movf	action@c+1,w
  2157     00E5  00F3               	movwf	___wmul@multiplier+1
  2158     00E6  085F               	movf	action@c,w
  2159     00E7  00F2               	movwf	___wmul@multiplier
  2160     00E8  300A               	movlw	10
  2161     00E9  00F4               	movwf	___wmul@multiplicand
  2162     00EA  3000               	movlw	0
  2163     00EB  00F5               	movwf	___wmul@multiplicand+1
  2164     00EC  120A  118A  238D  120A  118A  	fcall	___wmul
  2165     00F1  0872               	movf	?___wmul,w
  2166     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  2167     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  2168     00F4  0757               	addwf	??_action+2,w
  2169     00F5  00D9               	movwf	??_action+4
  2170     00F6  0873               	movf	?___wmul+1,w
  2171     00F7  1803               	skipnc
  2172     00F8  0A73               	incf	?___wmul+1,w
  2173     00F9  0758               	addwf	??_action+3,w
  2174     00FA  00DA               	movwf	??_action+5
  2175     00FB  0861               	movf	action@d,w
  2176     00FC  0759               	addwf	??_action+4,w
  2177     00FD  00C0               	movwf	_appled7Data+1
  2178     00FE  0862               	movf	action@d+1,w
  2179     00FF  1803               	skipnc
  2180     0100  0A62               	incf	action@d+1,w
  2181     0101  075A               	addwf	??_action+5,w
  2182     0102  00C1               	movwf	_appled7Data+2
  2183     0103                     l1691:
  2184                           
  2185                           ;source_uart.c: 107:             appled7Data.state = led7seg_init;
  2186     0103  01BF               	clrf	_appled7Data
  2187     0104                     l298:
  2188     0104  0008               	return
  2189     0105                     __end_of_action:
  2190                           
  2191                           	psect	text7
  2192     035A                     __ptext7:	
  2193 ;; *************** function _check_err *****************
  2194 ;; Defined at:
  2195 ;;		line 61 in file "source_uart.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  i               2    2[COMMON] int 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  1    wreg      void 
  2202 ;; Registers used:
  2203 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2209 ;;      Params:         0       0       0       0       0
  2210 ;;      Locals:         2       0       0       0       0
  2211 ;;      Temps:          0       0       0       0       0
  2212 ;;      Totals:         2       0       0       0       0
  2213 ;;Total ram usage:        2 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_action
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223     035A                     _check_err:	
  2224                           ;psect for function _check_err
  2225                           
  2226     035A                     l1501:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _check_err: [wreg-fsr0h+status,2+status,0]
  2229                           
  2230                           
  2231                           ;source_uart.c: 62:     int i = 4;
  2232     035A  3004               	movlw	4
  2233     035B  00F2               	movwf	check_err@i
  2234     035C  3000               	movlw	0
  2235     035D  00F3               	movwf	check_err@i+1
  2236                           
  2237                           ;source_uart.c: 63:     while (i) {
  2238     035E  2B7D               	goto	l1513
  2239     035F                     l1503:
  2240                           
  2241                           ;source_uart.c: 64:         if (datas[i] < 48 || datas[i] > 57) {
  2242     035F  0872               	movf	check_err@i,w
  2243     0360  3E2A               	addlw	(low (_datas| 0))& (0+255)
  2244     0361  0084               	movwf	4
  2245     0362  3030               	movlw	48
  2246     0363  1383               	bcf	3,7	;select IRP bank0
  2247     0364  0200               	subwf	0,w
  2248     0365  1C03               	skipc
  2249     0366  2B68               	goto	u691
  2250     0367  2B69               	goto	u690
  2251     0368                     u691:
  2252     0368  2B72               	goto	l1507
  2253     0369                     u690:
  2254     0369                     l1505:
  2255     0369  0872               	movf	check_err@i,w
  2256     036A  3E2A               	addlw	(low (_datas| 0))& (0+255)
  2257     036B  0084               	movwf	4
  2258     036C  303A               	movlw	58
  2259     036D  0200               	subwf	0,w
  2260     036E  1C03               	skipc
  2261     036F  2B71               	goto	u701
  2262     0370  2B72               	goto	u700
  2263     0371                     u701:
  2264     0371  2B77               	goto	l1511
  2265     0372                     u700:
  2266     0372                     l1507:
  2267                           
  2268                           ;source_uart.c: 65:             app_uartData.is_err = '1';
  2269     0372  3031               	movlw	49
  2270     0373  1283               	bcf	3,5	;RP0=0, select bank0
  2271     0374  1303               	bcf	3,6	;RP1=0, select bank0
  2272     0375  00B7               	movwf	_app_uartData+2
  2273     0376  2B8C               	goto	l287
  2274     0377                     l1511:
  2275                           
  2276                           ;source_uart.c: 68:         i--;
  2277     0377  30FF               	movlw	255
  2278     0378  07F2               	addwf	check_err@i,f
  2279     0379  1803               	skipnc
  2280     037A  0AF3               	incf	check_err@i+1,f
  2281     037B  30FF               	movlw	255
  2282     037C  07F3               	addwf	check_err@i+1,f
  2283     037D                     l1513:
  2284                           
  2285                           ;source_uart.c: 63:     while (i) {
  2286     037D  0872               	movf	check_err@i,w
  2287     037E  0473               	iorwf	check_err@i+1,w
  2288     037F  1D03               	btfss	3,2
  2289     0380  2B82               	goto	u711
  2290     0381  2B83               	goto	u710
  2291     0382                     u711:
  2292     0382  2B5F               	goto	l1503
  2293     0383                     u710:
  2294     0383                     l1515:
  2295                           
  2296                           ;source_uart.c: 70:     if (datas[5] != 'a') {
  2297     0383  3061               	movlw	97
  2298     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2299     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2300     0386  062F               	xorwf	_datas+5,w
  2301     0387  1903               	btfsc	3,2
  2302     0388  2B8A               	goto	u721
  2303     0389  2B8B               	goto	u720
  2304     038A                     u721:
  2305     038A  2B8C               	goto	l287
  2306     038B                     u720:
  2307     038B  2B72               	goto	l1507
  2308     038C                     l287:
  2309     038C  0008               	return
  2310     038D                     __end_of_check_err:
  2311                           
  2312                           	psect	text8
  2313     038D                     __ptext8:	
  2314 ;; *************** function ___wmul *****************
  2315 ;; Defined at:
  2316 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  multiplier      2    2[COMMON] unsigned int 
  2319 ;;  multiplicand    2    4[COMMON] unsigned int 
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;  product         2    0[BANK0 ] unsigned int 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2    2[COMMON] unsigned int 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2331 ;;      Params:         4       0       0       0       0
  2332 ;;      Locals:         0       2       0       0       0
  2333 ;;      Temps:          0       0       0       0       0
  2334 ;;      Totals:         4       2       0       0       0
  2335 ;;Total ram usage:        6 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 1
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_action
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345     038D                     ___wmul:	
  2346                           ;psect for function ___wmul
  2347                           
  2348     038D                     l1521:	
  2349                           ;incstack = 0
  2350                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2351                           
  2352     038D  1283               	bcf	3,5	;RP0=0, select bank0
  2353     038E  1303               	bcf	3,6	;RP1=0, select bank0
  2354     038F  01D3               	clrf	___wmul@product
  2355     0390  01D4               	clrf	___wmul@product+1
  2356     0391                     l1523:
  2357     0391  1C72               	btfss	___wmul@multiplier,0
  2358     0392  2B94               	goto	u731
  2359     0393  2B95               	goto	u730
  2360     0394                     u731:
  2361     0394  2B9D               	goto	l441
  2362     0395                     u730:
  2363     0395                     l1525:
  2364     0395  0874               	movf	___wmul@multiplicand,w
  2365     0396  1283               	bcf	3,5	;RP0=0, select bank0
  2366     0397  1303               	bcf	3,6	;RP1=0, select bank0
  2367     0398  07D3               	addwf	___wmul@product,f
  2368     0399  1803               	skipnc
  2369     039A  0AD4               	incf	___wmul@product+1,f
  2370     039B  0875               	movf	___wmul@multiplicand+1,w
  2371     039C  07D4               	addwf	___wmul@product+1,f
  2372     039D                     l441:
  2373     039D  3001               	movlw	1
  2374     039E                     u745:
  2375     039E  1003               	clrc
  2376     039F  0DF4               	rlf	___wmul@multiplicand,f
  2377     03A0  0DF5               	rlf	___wmul@multiplicand+1,f
  2378     03A1  3EFF               	addlw	-1
  2379     03A2  1D03               	skipz
  2380     03A3  2B9E               	goto	u745
  2381     03A4                     l1527:
  2382     03A4  3001               	movlw	1
  2383     03A5                     u755:
  2384     03A5  1003               	clrc
  2385     03A6  0CF3               	rrf	___wmul@multiplier+1,f
  2386     03A7  0CF2               	rrf	___wmul@multiplier,f
  2387     03A8  3EFF               	addlw	-1
  2388     03A9  1D03               	skipz
  2389     03AA  2BA5               	goto	u755
  2390     03AB                     l1529:
  2391     03AB  0872               	movf	___wmul@multiplier,w
  2392     03AC  0473               	iorwf	___wmul@multiplier+1,w
  2393     03AD  1D03               	btfss	3,2
  2394     03AE  2BB0               	goto	u761
  2395     03AF  2BB1               	goto	u760
  2396     03B0                     u761:
  2397     03B0  2B91               	goto	l1523
  2398     03B1                     u760:
  2399     03B1                     l1531:
  2400     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2401     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2402     03B3  0854               	movf	___wmul@product+1,w
  2403     03B4  00F3               	movwf	?___wmul+1
  2404     03B5  0853               	movf	___wmul@product,w
  2405     03B6  00F2               	movwf	?___wmul
  2406     03B7                     l443:
  2407     03B7  0008               	return
  2408     03B8                     __end_of___wmul:
  2409                           
  2410                           	psect	text9
  2411     0452                     __ptext9:	
  2412 ;; *************** function _app_uart_init *****************
  2413 ;; Defined at:
  2414 ;;		line 112 in file "source_uart.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 2
  2435 ;; This function calls:
  2436 ;;		_common_init
  2437 ;;		_receive_init
  2438 ;;		_transmit_init
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444     0452                     _app_uart_init:	
  2445                           ;psect for function _app_uart_init
  2446                           
  2447     0452                     l1695:	
  2448                           ;incstack = 0
  2449                           ; Regs used in _app_uart_init: [wreg+status,2+status,0+pclath+cstack]
  2450                           
  2451                           
  2452                           ;source_uart.c: 113:     common_init();
  2453     0452  120A  118A  2465  120A  118A  	fcall	_common_init
  2454     0457                     l1697:
  2455                           
  2456                           ;source_uart.c: 114:     transmit_init();
  2457     0457  120A  118A  24B7  120A  118A  	fcall	_transmit_init
  2458     045C                     l1699:
  2459                           
  2460                           ;source_uart.c: 115:     receive_init();
  2461     045C  120A  118A  24AF  120A  118A  	fcall	_receive_init
  2462     0461                     l1701:
  2463                           
  2464                           ;source_uart.c: 116:     app_uartData.state = uart_init;
  2465     0461  1283               	bcf	3,5	;RP0=0, select bank0
  2466     0462  1303               	bcf	3,6	;RP1=0, select bank0
  2467     0463  01B5               	clrf	_app_uartData
  2468     0464                     l301:
  2469     0464  0008               	return
  2470     0465                     __end_of_app_uart_init:
  2471                           
  2472                           	psect	text10
  2473     04B7                     __ptext10:	
  2474 ;; *************** function _transmit_init *****************
  2475 ;; Defined at:
  2476 ;;		line 30 in file "source_uart.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;		None
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		None
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2490 ;;      Params:         0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0
  2493 ;;      Totals:         0       0       0       0       0
  2494 ;;Total ram usage:        0 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 1
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_app_uart_init
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504     04B7                     _transmit_init:	
  2505                           ;psect for function _transmit_init
  2506                           
  2507     04B7                     l1629:	
  2508                           ;incstack = 0
  2509                           ; Regs used in _transmit_init: []
  2510                           
  2511                           
  2512                           ;source_uart.c: 31:     TX9 = 0;
  2513     04B7  1683               	bsf	3,5	;RP0=1, select bank1
  2514     04B8  1303               	bcf	3,6	;RP1=0, select bank1
  2515     04B9  1318               	bcf	24,6	;volatile
  2516                           
  2517                           ;source_uart.c: 32:     TXEN = 1;
  2518     04BA  1698               	bsf	24,5	;volatile
  2519                           
  2520                           ;source_uart.c: 33:     TXIE = 0;
  2521     04BB  120C               	bcf	12,4	;volatile
  2522     04BC                     l257:
  2523     04BC  0008               	return
  2524     04BD                     __end_of_transmit_init:
  2525                           
  2526                           	psect	text11
  2527     04AF                     __ptext11:	
  2528 ;; *************** function _receive_init *****************
  2529 ;; Defined at:
  2530 ;;		line 36 in file "source_uart.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;		None
  2533 ;; Auto vars:     Size  Location     Type
  2534 ;;		None
  2535 ;; Return value:  Size  Location     Type
  2536 ;;                  1    wreg      void 
  2537 ;; Registers used:
  2538 ;;		None
  2539 ;; Tracked objects:
  2540 ;;		On entry : 0/0
  2541 ;;		On exit  : 0/0
  2542 ;;		Unchanged: 0/0
  2543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2544 ;;      Params:         0       0       0       0       0
  2545 ;;      Locals:         0       0       0       0       0
  2546 ;;      Temps:          0       0       0       0       0
  2547 ;;      Totals:         0       0       0       0       0
  2548 ;;Total ram usage:        0 bytes
  2549 ;; Hardware stack levels used: 1
  2550 ;; Hardware stack levels required when called: 1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_app_uart_init
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558     04AF                     _receive_init:	
  2559                           ;psect for function _receive_init
  2560                           
  2561     04AF                     l1631:	
  2562                           ;incstack = 0
  2563                           ; Regs used in _receive_init: []
  2564                           
  2565                           
  2566                           ;source_uart.c: 37:     RX9 = 0;
  2567     04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2568     04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2569     04B1  1318               	bcf	24,6	;volatile
  2570                           
  2571                           ;source_uart.c: 38:     CREN = 1;
  2572     04B2  1618               	bsf	24,4	;volatile
  2573                           
  2574                           ;source_uart.c: 39:     RCIE = 0;
  2575     04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2576     04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2577     04B5  128C               	bcf	12,5	;volatile
  2578     04B6                     l260:
  2579     04B6  0008               	return
  2580     04B7                     __end_of_receive_init:
  2581                           
  2582                           	psect	text12
  2583     0465                     __ptext12:	
  2584 ;; *************** function _common_init *****************
  2585 ;; Defined at:
  2586 ;;		line 19 in file "source_uart.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; Hardware stack levels required when called: 1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_app_uart_init
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614     0465                     _common_init:	
  2615                           ;psect for function _common_init
  2616                           
  2617     0465                     l1621:	
  2618                           ;incstack = 0
  2619                           ; Regs used in _common_init: [wreg]
  2620                           
  2621                           
  2622                           ;source_uart.c: 20:     BRGH = 1;
  2623     0465  1683               	bsf	3,5	;RP0=1, select bank1
  2624     0466  1303               	bcf	3,6	;RP1=0, select bank1
  2625     0467  1518               	bsf	24,2	;volatile
  2626                           
  2627                           ;source_uart.c: 21:     BRG16 = 0;
  2628     0468  1683               	bsf	3,5	;RP0=1, select bank3
  2629     0469  1703               	bsf	3,6	;RP1=1, select bank3
  2630     046A  1187               	bcf	7,3	;volatile
  2631                           
  2632                           ;source_uart.c: 22:     SYNC = 0;
  2633     046B  1683               	bsf	3,5	;RP0=1, select bank1
  2634     046C  1303               	bcf	3,6	;RP1=0, select bank1
  2635     046D  1218               	bcf	24,4	;volatile
  2636                           
  2637                           ;source_uart.c: 23:     SPEN = 1;
  2638     046E  1283               	bcf	3,5	;RP0=0, select bank0
  2639     046F  1303               	bcf	3,6	;RP1=0, select bank0
  2640     0470  1798               	bsf	24,7	;volatile
  2641     0471                     l1623:
  2642                           
  2643                           ;source_uart.c: 24:     SPBRG = ((8000000 / 16) / 9600) - 1;
  2644     0471  3033               	movlw	51
  2645     0472  1683               	bsf	3,5	;RP0=1, select bank1
  2646     0473  1303               	bcf	3,6	;RP1=0, select bank1
  2647     0474  0099               	movwf	25	;volatile
  2648     0475                     l1625:
  2649                           
  2650                           ;source_uart.c: 26:     PEIE = 1;
  2651     0475  170B               	bsf	11,6	;volatile
  2652     0476                     l1627:
  2653                           
  2654                           ;source_uart.c: 27:     GIE = 1;
  2655     0476  178B               	bsf	11,7	;volatile
  2656     0477                     l254:
  2657     0477  0008               	return
  2658     0478                     __end_of_common_init:
  2659                           
  2660                           	psect	text13
  2661     0105                     __ptext13:	
  2662 ;; *************** function _app_led7_task *****************
  2663 ;; Defined at:
  2664 ;;		line 44 in file "source_led7seg.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2678 ;;      Params:         0       0       0       0       0
  2679 ;;      Locals:         0       0       0       0       0
  2680 ;;      Temps:          0       2       0       0       0
  2681 ;;      Totals:         0       2       0       0       0
  2682 ;;Total ram usage:        2 bytes
  2683 ;; Hardware stack levels used: 1
  2684 ;; Hardware stack levels required when called: 3
  2685 ;; This function calls:
  2686 ;;		_display
  2687 ;;		_handle_value
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693     0105                     _app_led7_task:	
  2694                           ;psect for function _app_led7_task
  2695                           
  2696     0105                     l1703:	
  2697                           ;incstack = 0
  2698                           ; Regs used in _app_led7_task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2699                           
  2700                           
  2701                           ;source_led7seg.c: 45:     count_time++;
  2702     0105  3001               	movlw	1
  2703     0106  1283               	bcf	3,5	;RP0=0, select bank0
  2704     0107  1303               	bcf	3,6	;RP1=0, select bank0
  2705     0108  07D1               	addwf	_count_time,f
  2706     0109  1803               	skipnc
  2707     010A  0AD2               	incf	_count_time+1,f
  2708     010B  3000               	movlw	0
  2709     010C  07D2               	addwf	_count_time+1,f
  2710                           
  2711                           ;source_led7seg.c: 46:     switch (appled7Data.state) {
  2712     010D  2978               	goto	l1745
  2713     010E                     l159:	
  2714                           ;source_led7seg.c: 47:         case led7seg_init:
  2715                           
  2716                           
  2717                           ;source_led7seg.c: 48:         {;source_led7seg.c: 49:             appled7Data.state = l
      +                          ed7seg_1;
  2718     010E  01BF               	clrf	_appled7Data
  2719     010F  0ABF               	incf	_appled7Data,f
  2720     0110                     l1705:
  2721                           
  2722                           ;source_led7seg.c: 50:             handle_value(appled7Data.value);
  2723     0110  0841               	movf	_appled7Data+2,w
  2724     0111  00DE               	movwf	handle_value@value+1
  2725     0112  0840               	movf	_appled7Data+1,w
  2726     0113  00DD               	movwf	handle_value@value
  2727     0114  120A  118A  221A  120A  118A  	fcall	_handle_value
  2728                           
  2729                           ;source_led7seg.c: 51:             break;
  2730     0119  2994               	goto	l167
  2731     011A                     l161:	
  2732                           ;source_led7seg.c: 52:         };source_led7seg.c: 53:         case led7seg_1:
  2733                           
  2734                           
  2735                           ;source_led7seg.c: 54:         {;source_led7seg.c: 55:             RB0 = 0;
  2736     011A  1006               	bcf	6,0	;volatile
  2737                           
  2738                           ;source_led7seg.c: 56:             RB1 = 1;
  2739     011B  1486               	bsf	6,1	;volatile
  2740                           
  2741                           ;source_led7seg.c: 57:             RB2 = 1;
  2742     011C  1506               	bsf	6,2	;volatile
  2743                           
  2744                           ;source_led7seg.c: 58:             RB3 = 1;
  2745     011D  1586               	bsf	6,3	;volatile
  2746     011E                     l1707:
  2747                           
  2748                           ;source_led7seg.c: 59:             display(values[1]);
  2749     011E  0823               	movf	_values+3,w
  2750     011F  00F3               	movwf	display@i+1
  2751     0120  0822               	movf	_values+2,w
  2752     0121  00F2               	movwf	display@i
  2753     0122  120A  118A  2492  120A  118A  	fcall	_display
  2754     0127                     l1709:
  2755                           
  2756                           ;source_led7seg.c: 60:             next_index_led = 2;
  2757     0127  3002               	movlw	2
  2758     0128  1283               	bcf	3,5	;RP0=0, select bank0
  2759     0129  1303               	bcf	3,6	;RP1=0, select bank0
  2760     012A  00CF               	movwf	_next_index_led
  2761     012B  3000               	movlw	0
  2762     012C  00D0               	movwf	_next_index_led+1
  2763     012D                     l1711:
  2764                           
  2765                           ;source_led7seg.c: 61:             appled7Data.state = led7seg_wait;
  2766     012D  3005               	movlw	5
  2767     012E  00BF               	movwf	_appled7Data
  2768     012F                     l1713:
  2769                           
  2770                           ;source_led7seg.c: 62:             count_time = 0;
  2771     012F  01D1               	clrf	_count_time
  2772     0130  01D2               	clrf	_count_time+1
  2773                           
  2774                           ;source_led7seg.c: 63:             break;
  2775     0131  2994               	goto	l167
  2776     0132                     l162:	
  2777                           ;source_led7seg.c: 64:         };source_led7seg.c: 65:         case led7seg_2:
  2778                           
  2779                           
  2780                           ;source_led7seg.c: 66:         {;source_led7seg.c: 67:             RB0 = 1;
  2781     0132  1406               	bsf	6,0	;volatile
  2782                           
  2783                           ;source_led7seg.c: 68:             RB1 = 0;
  2784     0133  1086               	bcf	6,1	;volatile
  2785                           
  2786                           ;source_led7seg.c: 69:             RB2 = 1;
  2787     0134  1506               	bsf	6,2	;volatile
  2788                           
  2789                           ;source_led7seg.c: 70:             RB3 = 1;
  2790     0135  1586               	bsf	6,3	;volatile
  2791     0136                     l1715:
  2792                           
  2793                           ;source_led7seg.c: 71:             display(values[2]);
  2794     0136  0825               	movf	_values+5,w
  2795     0137  00F3               	movwf	display@i+1
  2796     0138  0824               	movf	_values+4,w
  2797     0139  00F2               	movwf	display@i
  2798     013A  120A  118A  2492  120A  118A  	fcall	_display
  2799     013F                     l1717:
  2800                           
  2801                           ;source_led7seg.c: 72:             next_index_led = 3;
  2802     013F  3003               	movlw	3
  2803     0140  1283               	bcf	3,5	;RP0=0, select bank0
  2804     0141  1303               	bcf	3,6	;RP1=0, select bank0
  2805     0142  00CF               	movwf	_next_index_led
  2806     0143  3000               	movlw	0
  2807     0144  00D0               	movwf	_next_index_led+1
  2808     0145  292D               	goto	l1711
  2809     0146                     l163:	
  2810                           ;source_led7seg.c: 76:         };source_led7seg.c: 77:         case led7seg_3:
  2811                           
  2812                           
  2813                           ;source_led7seg.c: 78:         {;source_led7seg.c: 79:             RB0 = 1;
  2814     0146  1406               	bsf	6,0	;volatile
  2815                           
  2816                           ;source_led7seg.c: 80:             RB1 = 1;
  2817     0147  1486               	bsf	6,1	;volatile
  2818                           
  2819                           ;source_led7seg.c: 81:             RB2 = 0;
  2820     0148  1106               	bcf	6,2	;volatile
  2821                           
  2822                           ;source_led7seg.c: 82:             RB3 = 1;
  2823     0149  1586               	bsf	6,3	;volatile
  2824     014A                     l1723:
  2825                           
  2826                           ;source_led7seg.c: 83:             display(values[3]);
  2827     014A  0827               	movf	_values+7,w
  2828     014B  00F3               	movwf	display@i+1
  2829     014C  0826               	movf	_values+6,w
  2830     014D  00F2               	movwf	display@i
  2831     014E  120A  118A  2492  120A  118A  	fcall	_display
  2832     0153                     l1725:
  2833                           
  2834                           ;source_led7seg.c: 84:             next_index_led = 4;
  2835     0153  3004               	movlw	4
  2836     0154  1283               	bcf	3,5	;RP0=0, select bank0
  2837     0155  1303               	bcf	3,6	;RP1=0, select bank0
  2838     0156  00CF               	movwf	_next_index_led
  2839     0157  3000               	movlw	0
  2840     0158  00D0               	movwf	_next_index_led+1
  2841     0159  292D               	goto	l1711
  2842     015A                     l164:	
  2843                           ;source_led7seg.c: 88:         };source_led7seg.c: 89:         case led7seg_4:
  2844                           
  2845                           
  2846                           ;source_led7seg.c: 90:         {;source_led7seg.c: 91:             RB0 = 1;
  2847     015A  1406               	bsf	6,0	;volatile
  2848                           
  2849                           ;source_led7seg.c: 92:             RB1 = 1;
  2850     015B  1486               	bsf	6,1	;volatile
  2851                           
  2852                           ;source_led7seg.c: 93:             RB2 = 1;
  2853     015C  1506               	bsf	6,2	;volatile
  2854                           
  2855                           ;source_led7seg.c: 94:             RB3 = 0;
  2856     015D  1186               	bcf	6,3	;volatile
  2857     015E                     l1731:
  2858                           
  2859                           ;source_led7seg.c: 95:             display(values[4]);
  2860     015E  0829               	movf	_values+9,w
  2861     015F  00F3               	movwf	display@i+1
  2862     0160  0828               	movf	_values+8,w
  2863     0161  00F2               	movwf	display@i
  2864     0162  120A  118A  2492  120A  118A  	fcall	_display
  2865     0167                     l1733:
  2866                           
  2867                           ;source_led7seg.c: 96:             next_index_led = 1;
  2868     0167  3001               	movlw	1
  2869     0168  1283               	bcf	3,5	;RP0=0, select bank0
  2870     0169  1303               	bcf	3,6	;RP1=0, select bank0
  2871     016A  00CF               	movwf	_next_index_led
  2872     016B  3000               	movlw	0
  2873     016C  00D0               	movwf	_next_index_led+1
  2874     016D  292D               	goto	l1711
  2875     016E                     l1739:
  2876                           
  2877                           ;source_led7seg.c: 102:         {;source_led7seg.c: 104:             if (count_time == 1
      +                          00)
  2878     016E  3064               	movlw	100
  2879     016F  0651               	xorwf	_count_time,w
  2880     0170  0452               	iorwf	_count_time+1,w
  2881     0171  1D03               	btfss	3,2
  2882     0172  2974               	goto	u1071
  2883     0173  2975               	goto	u1070
  2884     0174                     u1071:
  2885     0174  2994               	goto	l167
  2886     0175                     u1070:
  2887     0175                     l1741:
  2888                           
  2889                           ;source_led7seg.c: 105:                 appled7Data.state = next_index_led;
  2890     0175  084F               	movf	_next_index_led,w
  2891     0176  00BF               	movwf	_appled7Data
  2892     0177  2994               	goto	l167
  2893     0178                     l1745:
  2894     0178  083F               	movf	_appled7Data,w
  2895     0179  00DF               	movwf	??_app_led7_task
  2896     017A  01E0               	clrf	??_app_led7_task+1
  2897                           
  2898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2899                           ; Switch size 1, requested type "simple"
  2900                           ; Number of cases is 1, Range of values is 0 to 0
  2901                           ; switch strategies available:
  2902                           ; Name         Instructions Cycles
  2903                           ; simple_byte            4     3 (average)
  2904                           ; direct_byte           11     8 (fixed)
  2905                           ; jumptable            260     6 (fixed)
  2906                           ;	Chosen strategy is simple_byte
  2907     017B  0860               	movf	??_app_led7_task+1,w
  2908     017C  3A00               	xorlw	0	; case 0
  2909     017D  1903               	skipnz
  2910     017E  2980               	goto	l2055
  2911     017F  2994               	goto	l167
  2912     0180                     l2055:
  2913                           
  2914                           ; Switch size 1, requested type "simple"
  2915                           ; Number of cases is 6, Range of values is 0 to 5
  2916                           ; switch strategies available:
  2917                           ; Name         Instructions Cycles
  2918                           ; simple_byte           19    10 (average)
  2919                           ; direct_byte           26     8 (fixed)
  2920                           ; jumptable            260     6 (fixed)
  2921                           ;	Chosen strategy is simple_byte
  2922     0180  085F               	movf	??_app_led7_task,w
  2923     0181  3A00               	xorlw	0	; case 0
  2924     0182  1903               	skipnz
  2925     0183  290E               	goto	l159
  2926     0184  3A01               	xorlw	1	; case 1
  2927     0185  1903               	skipnz
  2928     0186  291A               	goto	l161
  2929     0187  3A03               	xorlw	3	; case 2
  2930     0188  1903               	skipnz
  2931     0189  2932               	goto	l162
  2932     018A  3A01               	xorlw	1	; case 3
  2933     018B  1903               	skipnz
  2934     018C  2946               	goto	l163
  2935     018D  3A07               	xorlw	7	; case 4
  2936     018E  1903               	skipnz
  2937     018F  295A               	goto	l164
  2938     0190  3A01               	xorlw	1	; case 5
  2939     0191  1903               	skipnz
  2940     0192  296E               	goto	l1739
  2941     0193  2994               	goto	l167
  2942     0194                     l167:
  2943     0194  0008               	return
  2944     0195                     __end_of_app_led7_task:
  2945                           
  2946                           	psect	text14
  2947     021A                     __ptext14:	
  2948 ;; *************** function _handle_value *****************
  2949 ;; Defined at:
  2950 ;;		line 28 in file "source_led7seg.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  value           2   10[BANK0 ] int 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       2       0       0       0
  2965 ;;      Locals:         0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         0       2       0       0       0
  2968 ;;Total ram usage:        2 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 2
  2971 ;; This function calls:
  2972 ;;		___awdiv
  2973 ;;		___awmod
  2974 ;; This function is called by:
  2975 ;;		_app_led7_task
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979     021A                     _handle_value:	
  2980                           ;psect for function _handle_value
  2981                           
  2982     021A                     l1617:	
  2983                           ;incstack = 0
  2984                           ; Regs used in _handle_value: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2985                           
  2986                           
  2987                           ;source_led7seg.c: 29:     values[4] = value % 10;
  2988     021A  300A               	movlw	10
  2989     021B  1283               	bcf	3,5	;RP0=0, select bank0
  2990     021C  1303               	bcf	3,6	;RP1=0, select bank0
  2991     021D  00D7               	movwf	___awmod@divisor
  2992     021E  3000               	movlw	0
  2993     021F  00D8               	movwf	___awmod@divisor+1
  2994     0220  085E               	movf	handle_value@value+1,w
  2995     0221  00DA               	movwf	___awmod@dividend+1
  2996     0222  085D               	movf	handle_value@value,w
  2997     0223  00D9               	movwf	___awmod@dividend
  2998     0224  120A  118A  22FF  120A  118A  	fcall	___awmod
  2999     0229  1283               	bcf	3,5	;RP0=0, select bank0
  3000     022A  1303               	bcf	3,6	;RP1=0, select bank0
  3001     022B  0858               	movf	?___awmod+1,w
  3002     022C  00A9               	movwf	_values+9
  3003     022D  0857               	movf	?___awmod,w
  3004     022E  00A8               	movwf	_values+8
  3005                           
  3006                           ;source_led7seg.c: 30:     values[3] = (value / 10) % 10;
  3007     022F  300A               	movlw	10
  3008     0230  00D7               	movwf	___awmod@divisor
  3009     0231  3000               	movlw	0
  3010     0232  00D8               	movwf	___awmod@divisor+1
  3011     0233  300A               	movlw	10
  3012     0234  00F2               	movwf	___awdiv@divisor
  3013     0235  3000               	movlw	0
  3014     0236  00F3               	movwf	___awdiv@divisor+1
  3015     0237  085E               	movf	handle_value@value+1,w
  3016     0238  00F5               	movwf	___awdiv@dividend+1
  3017     0239  085D               	movf	handle_value@value,w
  3018     023A  00F4               	movwf	___awdiv@dividend
  3019     023B  120A  118A  2296  120A  118A  	fcall	___awdiv
  3020     0240  0873               	movf	?___awdiv+1,w
  3021     0241  1283               	bcf	3,5	;RP0=0, select bank0
  3022     0242  1303               	bcf	3,6	;RP1=0, select bank0
  3023     0243  00DA               	movwf	___awmod@dividend+1
  3024     0244  0872               	movf	?___awdiv,w
  3025     0245  00D9               	movwf	___awmod@dividend
  3026     0246  120A  118A  22FF  120A  118A  	fcall	___awmod
  3027     024B  1283               	bcf	3,5	;RP0=0, select bank0
  3028     024C  1303               	bcf	3,6	;RP1=0, select bank0
  3029     024D  0858               	movf	?___awmod+1,w
  3030     024E  00A7               	movwf	_values+7
  3031     024F  0857               	movf	?___awmod,w
  3032     0250  00A6               	movwf	_values+6
  3033                           
  3034                           ;source_led7seg.c: 31:     values[2] = (value / 100) % 10;
  3035     0251  300A               	movlw	10
  3036     0252  00D7               	movwf	___awmod@divisor
  3037     0253  3000               	movlw	0
  3038     0254  00D8               	movwf	___awmod@divisor+1
  3039     0255  3064               	movlw	100
  3040     0256  00F2               	movwf	___awdiv@divisor
  3041     0257  3000               	movlw	0
  3042     0258  00F3               	movwf	___awdiv@divisor+1
  3043     0259  085E               	movf	handle_value@value+1,w
  3044     025A  00F5               	movwf	___awdiv@dividend+1
  3045     025B  085D               	movf	handle_value@value,w
  3046     025C  00F4               	movwf	___awdiv@dividend
  3047     025D  120A  118A  2296  120A  118A  	fcall	___awdiv
  3048     0262  0873               	movf	?___awdiv+1,w
  3049     0263  1283               	bcf	3,5	;RP0=0, select bank0
  3050     0264  1303               	bcf	3,6	;RP1=0, select bank0
  3051     0265  00DA               	movwf	___awmod@dividend+1
  3052     0266  0872               	movf	?___awdiv,w
  3053     0267  00D9               	movwf	___awmod@dividend
  3054     0268  120A  118A  22FF  120A  118A  	fcall	___awmod
  3055     026D  1283               	bcf	3,5	;RP0=0, select bank0
  3056     026E  1303               	bcf	3,6	;RP1=0, select bank0
  3057     026F  0858               	movf	?___awmod+1,w
  3058     0270  00A5               	movwf	_values+5
  3059     0271  0857               	movf	?___awmod,w
  3060     0272  00A4               	movwf	_values+4
  3061                           
  3062                           ;source_led7seg.c: 32:     values[1] = (value / 1000) % 10;
  3063     0273  300A               	movlw	10
  3064     0274  00D7               	movwf	___awmod@divisor
  3065     0275  3000               	movlw	0
  3066     0276  00D8               	movwf	___awmod@divisor+1
  3067     0277  30E8               	movlw	232
  3068     0278  00F2               	movwf	___awdiv@divisor
  3069     0279  3003               	movlw	3
  3070     027A  00F3               	movwf	___awdiv@divisor+1
  3071     027B  085E               	movf	handle_value@value+1,w
  3072     027C  00F5               	movwf	___awdiv@dividend+1
  3073     027D  085D               	movf	handle_value@value,w
  3074     027E  00F4               	movwf	___awdiv@dividend
  3075     027F  120A  118A  2296  120A  118A  	fcall	___awdiv
  3076     0284  0873               	movf	?___awdiv+1,w
  3077     0285  1283               	bcf	3,5	;RP0=0, select bank0
  3078     0286  1303               	bcf	3,6	;RP1=0, select bank0
  3079     0287  00DA               	movwf	___awmod@dividend+1
  3080     0288  0872               	movf	?___awdiv,w
  3081     0289  00D9               	movwf	___awmod@dividend
  3082     028A  120A  118A  22FF  120A  118A  	fcall	___awmod
  3083     028F  1283               	bcf	3,5	;RP0=0, select bank0
  3084     0290  1303               	bcf	3,6	;RP1=0, select bank0
  3085     0291  0858               	movf	?___awmod+1,w
  3086     0292  00A3               	movwf	_values+3
  3087     0293  0857               	movf	?___awmod,w
  3088     0294  00A2               	movwf	_values+2
  3089     0295                     l149:
  3090     0295  0008               	return
  3091     0296                     __end_of_handle_value:
  3092                           
  3093                           	psect	text15
  3094     02FF                     __ptext15:	
  3095 ;; *************** function ___awmod *****************
  3096 ;; Defined at:
  3097 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  divisor         2    4[BANK0 ] int 
  3100 ;;  dividend        2    6[BANK0 ] int 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  sign            1    9[BANK0 ] unsigned char 
  3103 ;;  counter         1    8[BANK0 ] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2    4[BANK0 ] int 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, btemp+1
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         0       4       0       0       0
  3114 ;;      Locals:         0       2       0       0       0
  3115 ;;      Temps:          0       0       0       0       0
  3116 ;;      Totals:         0       6       0       0       0
  3117 ;;Total ram usage:        6 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 1
  3120 ;; This function calls:
  3121 ;;		Nothing
  3122 ;; This function is called by:
  3123 ;;		_handle_value
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127     02FF                     ___awmod:	
  3128                           ;psect for function ___awmod
  3129                           
  3130     02FF                     l1579:	
  3131                           ;incstack = 0
  3132                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  3133                           
  3134     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3135     0300  1303               	bcf	3,6	;RP1=0, select bank0
  3136     0301  01DC               	clrf	___awmod@sign
  3137     0302                     l1581:
  3138     0302  1FDA               	btfss	___awmod@dividend+1,7
  3139     0303  2B05               	goto	u871
  3140     0304  2B06               	goto	u870
  3141     0305                     u871:
  3142     0305  2B0D               	goto	l1587
  3143     0306                     u870:
  3144     0306                     l1583:
  3145     0306  09D9               	comf	___awmod@dividend,f
  3146     0307  09DA               	comf	___awmod@dividend+1,f
  3147     0308  0AD9               	incf	___awmod@dividend,f
  3148     0309  1903               	skipnz
  3149     030A  0ADA               	incf	___awmod@dividend+1,f
  3150     030B                     l1585:
  3151     030B  01DC               	clrf	___awmod@sign
  3152     030C  0ADC               	incf	___awmod@sign,f
  3153     030D                     l1587:
  3154     030D  1FD8               	btfss	___awmod@divisor+1,7
  3155     030E  2B10               	goto	u881
  3156     030F  2B11               	goto	u880
  3157     0310                     u881:
  3158     0310  2B16               	goto	l1591
  3159     0311                     u880:
  3160     0311                     l1589:
  3161     0311  09D7               	comf	___awmod@divisor,f
  3162     0312  09D8               	comf	___awmod@divisor+1,f
  3163     0313  0AD7               	incf	___awmod@divisor,f
  3164     0314  1903               	skipnz
  3165     0315  0AD8               	incf	___awmod@divisor+1,f
  3166     0316                     l1591:
  3167     0316  0857               	movf	___awmod@divisor,w
  3168     0317  0458               	iorwf	___awmod@divisor+1,w
  3169     0318  1903               	btfsc	3,2
  3170     0319  2B1B               	goto	u891
  3171     031A  2B1C               	goto	u890
  3172     031B                     u891:
  3173     031B  2B4B               	goto	l1609
  3174     031C                     u890:
  3175     031C                     l1593:
  3176     031C  01DB               	clrf	___awmod@counter
  3177     031D  0ADB               	incf	___awmod@counter,f
  3178     031E  2B2A               	goto	l1599
  3179     031F                     l1595:
  3180     031F  3001               	movlw	1
  3181     0320                     u905:
  3182     0320  1003               	clrc
  3183     0321  0DD7               	rlf	___awmod@divisor,f
  3184     0322  0DD8               	rlf	___awmod@divisor+1,f
  3185     0323  3EFF               	addlw	-1
  3186     0324  1D03               	skipz
  3187     0325  2B20               	goto	u905
  3188     0326                     l1597:
  3189     0326  3001               	movlw	1
  3190     0327  00FF               	movwf	btemp+1
  3191     0328  087F               	movf	btemp+1,w
  3192     0329  07DB               	addwf	___awmod@counter,f
  3193     032A                     l1599:
  3194     032A  1FD8               	btfss	___awmod@divisor+1,7
  3195     032B  2B2D               	goto	u911
  3196     032C  2B2E               	goto	u910
  3197     032D                     u911:
  3198     032D  2B1F               	goto	l1595
  3199     032E                     u910:
  3200     032E                     l1601:
  3201     032E  0858               	movf	___awmod@divisor+1,w
  3202     032F  025A               	subwf	___awmod@dividend+1,w
  3203     0330  1D03               	skipz
  3204     0331  2B34               	goto	u925
  3205     0332  0857               	movf	___awmod@divisor,w
  3206     0333  0259               	subwf	___awmod@dividend,w
  3207     0334                     u925:
  3208     0334  1C03               	skipc
  3209     0335  2B37               	goto	u921
  3210     0336  2B38               	goto	u920
  3211     0337                     u921:
  3212     0337  2B3E               	goto	l1605
  3213     0338                     u920:
  3214     0338                     l1603:
  3215     0338  0857               	movf	___awmod@divisor,w
  3216     0339  02D9               	subwf	___awmod@dividend,f
  3217     033A  0858               	movf	___awmod@divisor+1,w
  3218     033B  1C03               	skipc
  3219     033C  03DA               	decf	___awmod@dividend+1,f
  3220     033D  02DA               	subwf	___awmod@dividend+1,f
  3221     033E                     l1605:
  3222     033E  3001               	movlw	1
  3223     033F                     u935:
  3224     033F  1003               	clrc
  3225     0340  0CD8               	rrf	___awmod@divisor+1,f
  3226     0341  0CD7               	rrf	___awmod@divisor,f
  3227     0342  3EFF               	addlw	-1
  3228     0343  1D03               	skipz
  3229     0344  2B3F               	goto	u935
  3230     0345                     l1607:
  3231     0345  3001               	movlw	1
  3232     0346  02DB               	subwf	___awmod@counter,f
  3233     0347  1D03               	btfss	3,2
  3234     0348  2B4A               	goto	u941
  3235     0349  2B4B               	goto	u940
  3236     034A                     u941:
  3237     034A  2B2E               	goto	l1601
  3238     034B                     u940:
  3239     034B                     l1609:
  3240     034B  085C               	movf	___awmod@sign,w
  3241     034C  1903               	btfsc	3,2
  3242     034D  2B4F               	goto	u951
  3243     034E  2B50               	goto	u950
  3244     034F                     u951:
  3245     034F  2B55               	goto	l1613
  3246     0350                     u950:
  3247     0350                     l1611:
  3248     0350  09D9               	comf	___awmod@dividend,f
  3249     0351  09DA               	comf	___awmod@dividend+1,f
  3250     0352  0AD9               	incf	___awmod@dividend,f
  3251     0353  1903               	skipnz
  3252     0354  0ADA               	incf	___awmod@dividend+1,f
  3253     0355                     l1613:
  3254     0355  085A               	movf	___awmod@dividend+1,w
  3255     0356  00D8               	movwf	?___awmod+1
  3256     0357  0859               	movf	___awmod@dividend,w
  3257     0358  00D7               	movwf	?___awmod
  3258     0359                     l607:
  3259     0359  0008               	return
  3260     035A                     __end_of___awmod:
  3261                           
  3262                           	psect	text16
  3263     0296                     __ptext16:	
  3264 ;; *************** function ___awdiv *****************
  3265 ;; Defined at:
  3266 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  divisor         2    2[COMMON] int 
  3269 ;;  dividend        2    4[COMMON] int 
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  quotient        2    2[BANK0 ] int 
  3272 ;;  sign            1    1[BANK0 ] unsigned char 
  3273 ;;  counter         1    0[BANK0 ] unsigned char 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  2    2[COMMON] int 
  3276 ;; Registers used:
  3277 ;;		wreg, status,2, status,0, btemp+1
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         4       0       0       0       0
  3284 ;;      Locals:         0       4       0       0       0
  3285 ;;      Temps:          0       0       0       0       0
  3286 ;;      Totals:         4       4       0       0       0
  3287 ;;Total ram usage:        8 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 1
  3290 ;; This function calls:
  3291 ;;		Nothing
  3292 ;; This function is called by:
  3293 ;;		_handle_value
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297     0296                     ___awdiv:	
  3298                           ;psect for function ___awdiv
  3299                           
  3300     0296                     l1535:	
  3301                           ;incstack = 0
  3302                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  3303                           
  3304     0296  1283               	bcf	3,5	;RP0=0, select bank0
  3305     0297  1303               	bcf	3,6	;RP1=0, select bank0
  3306     0298  01D4               	clrf	___awdiv@sign
  3307     0299                     l1537:
  3308     0299  1FF3               	btfss	___awdiv@divisor+1,7
  3309     029A  2A9C               	goto	u771
  3310     029B  2A9D               	goto	u770
  3311     029C                     u771:
  3312     029C  2AA4               	goto	l1543
  3313     029D                     u770:
  3314     029D                     l1539:
  3315     029D  09F2               	comf	___awdiv@divisor,f
  3316     029E  09F3               	comf	___awdiv@divisor+1,f
  3317     029F  0AF2               	incf	___awdiv@divisor,f
  3318     02A0  1903               	skipnz
  3319     02A1  0AF3               	incf	___awdiv@divisor+1,f
  3320     02A2                     l1541:
  3321     02A2  01D4               	clrf	___awdiv@sign
  3322     02A3  0AD4               	incf	___awdiv@sign,f
  3323     02A4                     l1543:
  3324     02A4  1FF5               	btfss	___awdiv@dividend+1,7
  3325     02A5  2AA7               	goto	u781
  3326     02A6  2AA8               	goto	u780
  3327     02A7                     u781:
  3328     02A7  2AB1               	goto	l1549
  3329     02A8                     u780:
  3330     02A8                     l1545:
  3331     02A8  09F4               	comf	___awdiv@dividend,f
  3332     02A9  09F5               	comf	___awdiv@dividend+1,f
  3333     02AA  0AF4               	incf	___awdiv@dividend,f
  3334     02AB  1903               	skipnz
  3335     02AC  0AF5               	incf	___awdiv@dividend+1,f
  3336     02AD                     l1547:
  3337     02AD  3001               	movlw	1
  3338     02AE  00FF               	movwf	btemp+1
  3339     02AF  087F               	movf	btemp+1,w
  3340     02B0  06D4               	xorwf	___awdiv@sign,f
  3341     02B1                     l1549:
  3342     02B1  01D5               	clrf	___awdiv@quotient
  3343     02B2  01D6               	clrf	___awdiv@quotient+1
  3344     02B3                     l1551:
  3345     02B3  0872               	movf	___awdiv@divisor,w
  3346     02B4  0473               	iorwf	___awdiv@divisor+1,w
  3347     02B5  1903               	btfsc	3,2
  3348     02B6  2AB8               	goto	u791
  3349     02B7  2AB9               	goto	u790
  3350     02B8                     u791:
  3351     02B8  2AF0               	goto	l1571
  3352     02B9                     u790:
  3353     02B9                     l1553:
  3354     02B9  01D3               	clrf	___awdiv@counter
  3355     02BA  0AD3               	incf	___awdiv@counter,f
  3356     02BB  2AC7               	goto	l1559
  3357     02BC                     l1555:
  3358     02BC  3001               	movlw	1
  3359     02BD                     u805:
  3360     02BD  1003               	clrc
  3361     02BE  0DF2               	rlf	___awdiv@divisor,f
  3362     02BF  0DF3               	rlf	___awdiv@divisor+1,f
  3363     02C0  3EFF               	addlw	-1
  3364     02C1  1D03               	skipz
  3365     02C2  2ABD               	goto	u805
  3366     02C3                     l1557:
  3367     02C3  3001               	movlw	1
  3368     02C4  00FF               	movwf	btemp+1
  3369     02C5  087F               	movf	btemp+1,w
  3370     02C6  07D3               	addwf	___awdiv@counter,f
  3371     02C7                     l1559:
  3372     02C7  1FF3               	btfss	___awdiv@divisor+1,7
  3373     02C8  2ACA               	goto	u811
  3374     02C9  2ACB               	goto	u810
  3375     02CA                     u811:
  3376     02CA  2ABC               	goto	l1555
  3377     02CB                     u810:
  3378     02CB                     l1561:
  3379     02CB  3001               	movlw	1
  3380     02CC                     u825:
  3381     02CC  1003               	clrc
  3382     02CD  0DD5               	rlf	___awdiv@quotient,f
  3383     02CE  0DD6               	rlf	___awdiv@quotient+1,f
  3384     02CF  3EFF               	addlw	-1
  3385     02D0  1D03               	skipz
  3386     02D1  2ACC               	goto	u825
  3387     02D2  0873               	movf	___awdiv@divisor+1,w
  3388     02D3  0275               	subwf	___awdiv@dividend+1,w
  3389     02D4  1D03               	skipz
  3390     02D5  2AD8               	goto	u835
  3391     02D6  0872               	movf	___awdiv@divisor,w
  3392     02D7  0274               	subwf	___awdiv@dividend,w
  3393     02D8                     u835:
  3394     02D8  1C03               	skipc
  3395     02D9  2ADB               	goto	u831
  3396     02DA  2ADC               	goto	u830
  3397     02DB                     u831:
  3398     02DB  2AE3               	goto	l1567
  3399     02DC                     u830:
  3400     02DC                     l1563:
  3401     02DC  0872               	movf	___awdiv@divisor,w
  3402     02DD  02F4               	subwf	___awdiv@dividend,f
  3403     02DE  0873               	movf	___awdiv@divisor+1,w
  3404     02DF  1C03               	skipc
  3405     02E0  03F5               	decf	___awdiv@dividend+1,f
  3406     02E1  02F5               	subwf	___awdiv@dividend+1,f
  3407     02E2                     l1565:
  3408     02E2  1455               	bsf	___awdiv@quotient,0
  3409     02E3                     l1567:
  3410     02E3  3001               	movlw	1
  3411     02E4                     u845:
  3412     02E4  1003               	clrc
  3413     02E5  0CF3               	rrf	___awdiv@divisor+1,f
  3414     02E6  0CF2               	rrf	___awdiv@divisor,f
  3415     02E7  3EFF               	addlw	-1
  3416     02E8  1D03               	skipz
  3417     02E9  2AE4               	goto	u845
  3418     02EA                     l1569:
  3419     02EA  3001               	movlw	1
  3420     02EB  02D3               	subwf	___awdiv@counter,f
  3421     02EC  1D03               	btfss	3,2
  3422     02ED  2AEF               	goto	u851
  3423     02EE  2AF0               	goto	u850
  3424     02EF                     u851:
  3425     02EF  2ACB               	goto	l1561
  3426     02F0                     u850:
  3427     02F0                     l1571:
  3428     02F0  0854               	movf	___awdiv@sign,w
  3429     02F1  1903               	btfsc	3,2
  3430     02F2  2AF4               	goto	u861
  3431     02F3  2AF5               	goto	u860
  3432     02F4                     u861:
  3433     02F4  2AFA               	goto	l1575
  3434     02F5                     u860:
  3435     02F5                     l1573:
  3436     02F5  09D5               	comf	___awdiv@quotient,f
  3437     02F6  09D6               	comf	___awdiv@quotient+1,f
  3438     02F7  0AD5               	incf	___awdiv@quotient,f
  3439     02F8  1903               	skipnz
  3440     02F9  0AD6               	incf	___awdiv@quotient+1,f
  3441     02FA                     l1575:
  3442     02FA  0856               	movf	___awdiv@quotient+1,w
  3443     02FB  00F3               	movwf	?___awdiv+1
  3444     02FC  0855               	movf	___awdiv@quotient,w
  3445     02FD  00F2               	movwf	?___awdiv
  3446     02FE                     l594:
  3447     02FE  0008               	return
  3448     02FF                     __end_of___awdiv:
  3449                           
  3450                           	psect	text17
  3451     0492                     __ptext17:	
  3452 ;; *************** function _display *****************
  3453 ;; Defined at:
  3454 ;;		line 35 in file "source_led7seg.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  i               2    2[COMMON] int 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;		None
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3468 ;;      Params:         2       0       0       0       0
  3469 ;;      Locals:         0       0       0       0       0
  3470 ;;      Temps:          1       0       0       0       0
  3471 ;;      Totals:         3       0       0       0       0
  3472 ;;Total ram usage:        3 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; Hardware stack levels required when called: 1
  3475 ;; This function calls:
  3476 ;;		Nothing
  3477 ;; This function is called by:
  3478 ;;		_app_led7_task
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482     0492                     _display:	
  3483                           ;psect for function _display
  3484                           
  3485     0492                     l1619:	
  3486                           ;incstack = 0
  3487                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
  3488                           
  3489                           
  3490                           ;source_led7seg.c: 36:     PORTD = seg_data[i];
  3491     0492  0872               	movf	display@i,w
  3492     0493  00F4               	movwf	??_display
  3493     0494  0774               	addwf	??_display,w
  3494     0495  3EA0               	addlw	(low (_seg_data| 0))& (0+255)
  3495     0496  0084               	movwf	4
  3496     0497  1383               	bcf	3,7	;select IRP bank1
  3497     0498  0800               	movf	0,w
  3498     0499  1283               	bcf	3,5	;RP0=0, select bank0
  3499     049A  1303               	bcf	3,6	;RP1=0, select bank0
  3500     049B  0088               	movwf	8	;volatile
  3501     049C                     l152:
  3502     049C  0008               	return
  3503     049D                     __end_of_display:
  3504                           
  3505                           	psect	text18
  3506     04BD                     __ptext18:	
  3507 ;; *************** function _app_led7_init *****************
  3508 ;; Defined at:
  3509 ;;		line 39 in file "source_led7seg.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      void 
  3516 ;; Registers used:
  3517 ;;		status,2
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3523 ;;      Params:         0       0       0       0       0
  3524 ;;      Locals:         0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0
  3526 ;;      Totals:         0       0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 1
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537     04BD                     _app_led7_init:	
  3538                           ;psect for function _app_led7_init
  3539                           
  3540     04BD                     l1693:	
  3541                           ;incstack = 0
  3542                           ; Regs used in _app_led7_init: [status,2]
  3543                           
  3544                           
  3545                           ;source_led7seg.c: 40:     appled7Data.state = led7seg_init;
  3546     04BD  1283               	bcf	3,5	;RP0=0, select bank0
  3547     04BE  1303               	bcf	3,6	;RP1=0, select bank0
  3548     04BF  01BF               	clrf	_appled7Data
  3549                           
  3550                           ;source_led7seg.c: 41:     appled7Data.value = 0000;
  3551     04C0  01C0               	clrf	_appled7Data+1
  3552     04C1  01C1               	clrf	_appled7Data+2
  3553     04C2                     l155:
  3554     04C2  0008               	return
  3555     04C3                     __end_of_app_led7_init:
  3556                           
  3557                           	psect	text19
  3558     0415                     __ptext19:	
  3559 ;; *************** function _timer_isr *****************
  3560 ;; Defined at:
  3561 ;;		line 19 in file "source_timer0.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  1    wreg      void 
  3568 ;; Registers used:
  3569 ;;		wreg
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       0       0       0       0
  3576 ;;      Locals:         0       0       0       0       0
  3577 ;;      Temps:          2       0       0       0       0
  3578 ;;      Totals:         2       0       0       0       0
  3579 ;;Total ram usage:        2 bytes
  3580 ;; Hardware stack levels used: 1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		Interrupt level 1
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588     0415                     _timer_isr:	
  3589                           ;psect for function _timer_isr
  3590                           
  3591     0415                     i1l1953:
  3592                           
  3593                           ;source_timer0.c: 20:     if (TMR0IF == 1) {
  3594     0415  1D0B               	btfss	11,2	;volatile
  3595     0416  2C18               	goto	u133_21
  3596     0417  2C19               	goto	u133_20
  3597     0418                     u133_21:
  3598     0418  2C24               	goto	i1l186
  3599     0419                     u133_20:
  3600     0419                     i1l1955:
  3601                           
  3602                           ;source_timer0.c: 21:         TMR0 = 101;
  3603     0419  3065               	movlw	101
  3604     041A  1283               	bcf	3,5	;RP0=0, select bank0
  3605     041B  1303               	bcf	3,6	;RP1=0, select bank0
  3606     041C  0081               	movwf	1	;volatile
  3607     041D                     i1l1957:
  3608                           
  3609                           ;source_timer0.c: 22:         TMR0IF = 0;
  3610     041D  110B               	bcf	11,2	;volatile
  3611                           
  3612                           ;source_timer0.c: 23:         appTimer0Data.timer0_count++;
  3613     041E  3001               	movlw	1
  3614     041F  07B1               	addwf	_appTimer0Data+1,f
  3615     0420  1803               	skipnc
  3616     0421  0AB2               	incf	_appTimer0Data+2,f
  3617     0422  3000               	movlw	0
  3618     0423  07B2               	addwf	_appTimer0Data+2,f
  3619     0424                     i1l186:
  3620     0424  0871               	movf	??_timer_isr+1,w
  3621     0425  008A               	movwf	10
  3622     0426  0E70               	swapf	??_timer_isr,w
  3623     0427  0083               	movwf	3
  3624     0428  0EFE               	swapf	btemp,f
  3625     0429  0E7E               	swapf	btemp,w
  3626     042A  0009               	retfie
  3627     042B                     __end_of_timer_isr:
  3628     007E                     btemp	set	126	;btemp
  3629     007E                     wtemp0	set	126
  3630                           
  3631                           	psect	intentry
  3632     0004                     __pintentry:	
  3633                           ;incstack = 0
  3634                           ; Regs used in _timer_isr: [wreg]
  3635                           
  3636     0004                     interrupt_function:
  3637     007E                     saved_w	set	btemp
  3638     0004  00FE               	movwf	btemp
  3639     0005  0E03               	swapf	3,w
  3640     0006  00F0               	movwf	??_timer_isr
  3641     0007  080A               	movf	10,w
  3642     0008  00F1               	movwf	??_timer_isr+1
  3643     0009  120A  118A  2C15   	ljmp	_timer_isr
  3644                           
  3645                           	psect	idloc
  3646                           
  3647                           ;Config register IDLOC0 @ 0x2000
  3648                           ;	unspecified, using default values
  3649     2000                     	org	8192
  3650     2000  3FFF               	dw	16383
  3651                           
  3652                           ;Config register IDLOC1 @ 0x2001
  3653                           ;	unspecified, using default values
  3654     2001                     	org	8193
  3655     2001  3FFF               	dw	16383
  3656                           
  3657                           ;Config register IDLOC2 @ 0x2002
  3658                           ;	unspecified, using default values
  3659     2002                     	org	8194
  3660     2002  3FFF               	dw	16383
  3661                           
  3662                           ;Config register IDLOC3 @ 0x2003
  3663                           ;	unspecified, using default values
  3664     2003                     	org	8195
  3665     2003  3FFF               	dw	16383
  3666                           
  3667                           	psect	config
  3668                           
  3669                           ;Config register CONFIG1 @ 0x2007
  3670                           ;	Oscillator Selection bits
  3671                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3672                           ;	Watchdog Timer Enable bit
  3673                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3674                           ;	Power-up Timer Enable bit
  3675                           ;	PWRTE = OFF, PWRT disabled
  3676                           ;	RE3/MCLR pin function select bit
  3677                           ;	MCLRE = 0x1, unprogrammed default
  3678                           ;	Code Protection bit
  3679                           ;	CP = OFF, Program memory code protection is disabled
  3680                           ;	Data Code Protection bit
  3681                           ;	CPD = OFF, Data memory code protection is disabled
  3682                           ;	Brown Out Reset Selection bits
  3683                           ;	BOREN = ON, BOR enabled
  3684                           ;	Internal External Switchover bit
  3685                           ;	IESO = 0x1, unprogrammed default
  3686                           ;	Fail-Safe Clock Monitor Enabled bit
  3687                           ;	FCMEN = 0x1, unprogrammed default
  3688                           ;	Low Voltage Programming Enable bit
  3689                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3690                           ;	In-Circuit Debugger Mode bit
  3691                           ;	DEBUG = 0x1, unprogrammed default
  3692     2007                     	org	8199
  3693     2007  2FF2               	dw	12274
  3694                           
  3695                           ;Config register CONFIG2 @ 0x2008
  3696                           ;	Brown-out Reset Selection bit
  3697                           ;	BOR4V = 0x1, unprogrammed default
  3698                           ;	Flash Program Memory Self Write Enable bits
  3699                           ;	WRT = OFF, Write protection off
  3700     2008                     	org	8200
  3701     2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    0
    Data        22
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     19      72
    BANK1            80      0      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_stringdata@s	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _send_stringdata->_send_chardata
    _action->___wmul
    _handle_value->___awdiv
    ___awmod->___awdiv

Critical Paths under _timer_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_app_uart_task
    _app_uart_task->_action
    _action->___wmul
    _app_led7_task->_handle_value
    _handle_value->___awmod
    ___awmod->___awdiv

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3046
                      _app_led7_init
                      _app_led7_task
                      _app_uart_init
                      _app_uart_task
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _app_uart_task                                        2     2      0     896
                                             17 BANK0      2     2      0
                             _action
                            _getdata
                      _send_chardata
                    _send_stringdata
 ---------------------------------------------------------------------------------
 (2) _send_stringdata                                      1     1      0     100
                                              3 COMMON     1     1      0
                      _send_chardata
 ---------------------------------------------------------------------------------
 (3) _send_chardata                                        1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getdata                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _action                                              15    15      0     774
                                              2 BANK0     15    15      0
                             ___wmul
                          _check_err
 ---------------------------------------------------------------------------------
 (3) _check_err                                            2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _app_uart_init                                        0     0      0       0
                        _common_init
                       _receive_init
                      _transmit_init
 ---------------------------------------------------------------------------------
 (2) _transmit_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _receive_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _common_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _app_led7_task                                        2     2      0    2150
                                             12 BANK0      2     2      0
                            _display
                       _handle_value
 ---------------------------------------------------------------------------------
 (2) _handle_value                                         2     0      2    1824
                                             10 BANK0      2     0      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     904
                                              4 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     756
                                              2 COMMON     4     0      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _display                                              3     1      2     326
                                              2 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _app_led7_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _timer_isr                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_led7_init
   _app_led7_task
     _display
     _handle_value
       ___awdiv
       ___awmod
         ___awdiv (ARG)
   _app_uart_init
     _common_init
     _receive_init
     _transmit_init
   _app_uart_task
     _action
       ___wmul
       _check_err
     _getdata
     _send_chardata
     _send_stringdata
       _send_chardata
   _system_init

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      48       5       90.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      67      12        0.0%
ABS                  0      0      67       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 12 15:45:25 2023

                      pc 0002                       l35 0414             ___awdiv@sign 0054  
                     fsr 0004      ___wmul@multiplicand 0074             ?_common_init 0070  
    __end_of_system_init 0415                      l301 0464                      l152 049C  
                    l312 01EA                      l161 011A                      l162 0132  
                    l155 04C2                      l163 0146                      l164 015A  
                    l260 04B6                      l316 0219                      l149 0295  
                    l254 0477                      l270 049E                      l167 0194  
                    l159 010E                      l264 0480                      l257 04BC  
                    l441 039D                      l273 04A6                      l443 03B7  
                    l267 0485                      l607 0359                      l287 038C  
                    l279 03FC                      l298 0104                      l594 02FE  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB3 0033                      _RB6 0036  
                    _RB7 0037                      u700 0372                      u701 0371  
                    u710 0383                      u711 0382                      u720 038B  
                    u721 038A                      u810 02CB                      u730 0395  
                    u811 02CA                      u731 0394                      u805 02BD  
                    u830 02DC                      u910 032E                      u831 02DB  
                    u911 032D                      u920 0338                      u760 03B1  
                    u680 04A4                      u825 02CC                      u921 0337  
                    u905 0320                      u761 03B0                      u745 039E  
                    u681 04A3                      u850 02F0                      u770 029D  
                    u690 0369                      u851 02EF                      u835 02D8  
                    u771 029C                      u755 03A5                      u691 0368  
                    u860 02F5                      u780 02A8                      u940 034B  
                    u861 02F4                      u845 02E4                      u781 02A7  
                    u941 034A                      u925 0334                      u790 02B9  
                    u950 0350                      u870 0306                      u791 02B8  
                    u951 034F                      u935 033F                      u871 0305  
                    u880 0311                      u960 047E                      u881 0310  
                    u961 047D                      _RX9 00C6                      u890 031C  
                    u970 0484                      u891 031B                      u971 0483  
                    u980 03FC                      u981 03FB                      u990 0045  
                    u991 0044                      _TX9 04C6                      fsr0 0004  
                    indf 0000             ___awmod@sign 005C                     l1151 040E  
                   l1143 03FD                     l1161 0413                     l1153 040F  
                   l1145 0403                     l1155 0410                     l1147 0406  
                   l1501 035A                     l2053 020B                     l1157 0411  
                   l1149 040B                     l2055 0180                     l1511 0377  
                   l1503 035F                     l1159 0412                     l1601 032E  
                   l1521 038D                     l1505 0369                     l1513 037D  
                   l1611 0350                     l1603 0338                     l1531 03B1  
                   l1523 0391                     l1515 0383                     l1507 0372  
                   l1541 02A2                     l1613 0355                     l1605 033E  
                   l1621 0465                     l1701 0461                     l1525 0395  
                   l1551 02B3                     l1543 02A4                     l1535 0296  
                   l1607 0345                     l1711 012D                     l1703 0105  
                   l1623 0471                     l1631 04AF                     l1527 03A4  
                   l1561 02CB                     l1553 02B9                     l1545 02A8  
                   l1537 0299                     l1609 034B                     l1617 021A  
                   l1713 012F                     l1705 0110                     l1625 0475  
                   l1529 03AB                     l1633 0478                     l1641 03DF  
                   l1801 03B8                     l1619 0492                     l1563 02DC  
                   l1555 02BC                     l1571 02F0                     l1547 02AD  
                   l1539 029D                     l1731 015E                     l1723 014A  
                   l1715 0136                     l1707 011E                     l1627 0476  
                   l1651 003F                     l1635 047E                     l1643 03E0  
                   l1811 03CB                     l1803 03BC                     l1573 02F5  
                   l1565 02E2                     l1557 02C3                     l1549 02B1  
                   l1581 0302                     l1741 0175                     l1733 0167  
                   l1725 0153                     l1717 013F                     l1709 0127  
                   l1629 04B7                     l1653 0045                     l1661 0057  
                   l1637 0484                     l1645 03EC                     l1813 03D0  
                   l1805 03BF                     l1575 02FA                     l1567 02E3  
                   l1559 02C7                     l1591 0316                     l1583 0306  
                   l1671 0072                     l1663 0059                     l1655 004B  
                   l1647 03F0                     l1751 0195                     l1815 03D5  
                   l1807 03C1                     l1569 02EA                     l1593 031C  
                   l1585 030B                     l1745 0178                     l1681 008B  
                   l1665 005F                     l1673 0074                     l1657 0053  
                   l1649 003D                     l1497 049E                     l1761 01A6  
                   l1753 0196                     l1809 03C6                     l1595 031F  
                   l1587 030D                     l1579 02FF                     l1739 016E  
                   l1691 0103                     l1683 0091                     l1675 007A  
                   l1667 0065                     l1659 0055                     l1499 04A4  
                   l1771 01D7                     l1755 0197                     l1693 04BD  
                   l1597 0326                     l1589 0311                     l1685 0096  
                   l1677 0081                     l1669 006B                     l1781 01F4  
                   l1773 01DF                     l1765 01AD                     l1757 0199  
                   l1599 032A                     l1695 0452                     l1687 009E  
                   l1679 0089                     l1783 01FC                     l1775 01E5  
                   l1767 01B3                     l1759 019E                     l1697 0457  
                   l1689 00BA                     l1785 01FE                     l1769 01B9  
                   l1699 045C                     l1779 01F0                     l1789 0201  
                   STR_1 048C                     _BRGH 04C2                     u1000 004B  
                   _CREN 00C4                     u1001 004A                     u1010 005F  
                   u1011 005E                     u1020 0072                     u1100 01DF  
                   u1021 0071                     u1101 01DE                     u1030 007A  
                   u1110 01F0                     u1031 0079                     u1111 01EF  
                   u1040 0081                     u1120 01FC                     u1041 0080  
                   u1121 01FB                     u1050 0091                     u1051 0090  
                   u1060 009E                     u1061 009D                     u1070 0175  
                   u1071 0174                     u1080 01B3                     u1081 01B2  
                   u1090 01B9                     u1091 01B8                     _PEIE 005E  
                   _RCIE 0465                     _RCIF 0065                     _OERR 00C1  
                   _TMR0 0001                     _SPEN 00C7                     _TXIE 0464  
                   _TXEN 04C5                     _TXIF 0064                     _SYNC 04C4  
                   _WPUB 0095          ??_app_uart_init 0072          ??_app_uart_task 0064  
                   _main 03B8                     _pass 0047                     btemp 007E  
                   start 000C                    ?_main 0070          __end_of___awdiv 02FF  
                  _BRG16 0C3B          __end_of___awmod 035A                    _ANSEL 0188  
        ___awdiv@divisor 0072                    i1l186 0424                    _RCIDL 0C3E  
        ___awdiv@counter 0053                    _RCREG 001A                    _SPBRG 0099  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    _TXREG 0019            _transmit_init 04B7  
                  _nRBPU 040F          __end_of_getdata 0486          __end_of_display 049D  
                  _datas 002A                    pclath 000A                    status 0003  
                  wtemp0 007E           _data_receiving 0049          __initialization 000F  
            _system_init 03FD             __end_of_main 03DE    __end_of_send_chardata 04A7  
                 ??_main 0076           ?_transmit_init 0070     __end_of_handle_value 0296  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0074                   _ANSELH 0189  
                 i1l1953 0415                   i1l1955 0419                   i1l1957 041D  
                 u133_20 0419                   u133_21 0418                   _TMR0IF 005A  
                 _TRISC6 043E                   _TRISC7 043F           _next_index_led 004F  
                 ___wmul 038D                ??___awdiv 0076                ??___awmod 0076  
                 _action 003A         ___awdiv@quotient 0055          ___awmod@divisor 0057  
                 _values 0020          ___awmod@counter 005B                ??_getdata 0072  
              ??_display 0074                   saved_w 007E  __end_of__initialization 0036  
          ?_receive_init 0070           __pcstackCOMMON 0070             __pidataBANK0 04C3  
           __pidataBANK1 042B          ??_transmit_init 0072               __pbssBANK0 0020  
  __end_of_app_led7_init 04C3    __end_of_app_led7_task 0195           ??_receive_init 0072  
             __pmaintext 03B8               _do_actionn 004D                  ?___wmul 0072  
                ?_action 0070               __pintentry 0004               _appledData 0076  
             __stringtab 0486        __end_of_check_err 038D    __end_of_app_uart_init 0465  
  __end_of_app_uart_task 021A             _handle_value 021A               _count_time 0051  
             _index_data 004B             ?_system_init 0070                  ___awdiv 0296  
                ___awmod 02FF        ??_send_stringdata 0073               check_err@i 0072  
             action@data 0063                _ANSELbits 0188                  __ptext1 03FD  
                __ptext2 0195                  __ptext3 03DE                  __ptext4 049D  
                __ptext5 0478                  __ptext6 003A                  __ptext7 035A  
                __ptext8 038D                  __ptext9 0452                  _getdata 0478  
                _display 0492             _app_uartData 0035                  action@a 005B  
                action@b 005D                  action@c 005F                  action@d 0061  
       ___awmod@dividend 0059                  _pressed 0079                  clrloop0 04A8  
   end_of_initialization 0036        __end_of_timer_isr 042B     __end_of_receive_init 04B7  
      handle_value@value 005D                _TRISBbits 0086                _TRISEbits 0089  
         __end_of___wmul 03B8           __end_of_action 0105            ??_common_init 0072  
    start_initialization 000F                 ??___wmul 0076               init_fetch0 043F  
               ??_action 0055            _send_chardata 049D              __pdataBANK0 0066  
            __pdataBANK1 00A0    __end_of_transmit_init 04BD              __pbssCOMMON 0076  
              ___latbits 0002            __pcstackBANK0 0053      __end_of_common_init 0478  
            _appBtn1Data 0042              _appBtn2Data 003C          _send_stringdata 03DE  
              _check_err 035A           ?_send_chardata 0070                 ?___awdiv 0072  
               ?___awmod 0057                __pstrings 0486              _app_adcData 0039  
               ?_getdata 0070                 ?_display 0072              _appled7Data 003F  
          _appTimer0Data 0030        interrupt_function 0004           ___wmul@product 0053  
           _receive_init 04AF               ?_check_err 0070                clear_ram0 04A7  
               _GO_nDONE 00F9                _timer_isr 0415              _common_init 0465  
             _ADCON0bits 001F              __stringbase 048B        ___wmul@multiplier 0072  
__end_of_send_stringdata 03FD         send_stringdata@s 0073            _app_led7_init 04BD  
          _app_led7_task 0105              _count_delay 0045          ??_send_chardata 0072  
      send_chardata@data 0072               ?_timer_isr 0070       __end_of__stringtab 048C  
               __ptext10 04B7                 __ptext11 04AF                 __ptext12 0465  
               __ptext13 0105                 __ptext14 021A                 __ptext15 02FF  
               __ptext16 0296                 __ptext17 0492                 __ptext18 04BD  
               __ptext19 0415           ?_app_led7_init 0070           ?_app_led7_task 0070  
               _cur_data 0066              ??_check_err 0072                 _seg_data 00A0  
          _app_uart_init 0452            _app_uart_task 0195                 _pre_data 0067  
               display@i 0072               _INTCONbits 000B                 init_ram0 0443  
       ?_send_stringdata 0070                 intlevel1 0000           ?_app_uart_init 0070  
         ?_app_uart_task 0070            ?_handle_value 005D                stringcode 0486  
          ??_system_init 0072              ??_timer_isr 0070               _OPTION_REG 0081  
               stringdir 0486                 stringtab 0486          ??_app_led7_init 0072  
        ??_app_led7_task 005F           ??_handle_value 0076  
